<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tqk.blog.mapper.BlBlogMapper" >
  <resultMap id="BaseResultMap" type="com.tqk.blog.pojo.BlBlog" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="blog_id" property="blogId" jdbcType="VARCHAR" />
    <result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    <result column="blog_image" property="blogImage" jdbcType="VARCHAR" />
    <result column="blog_goods" property="blogGoods" jdbcType="INTEGER" />
    <result column="blog_read" property="blogRead" jdbcType="INTEGER" />
    <result column="blog_collection" property="blogCollection" jdbcType="INTEGER" />
    <result column="blog_type" property="blogType" jdbcType="INTEGER" />
    <result column="blog_remark" property="blogRemark" jdbcType="VARCHAR" />
    <result column="blog_comment" property="blogComment" jdbcType="INTEGER" />
    <result column="blog_source" property="blogSource" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="blog_content" property="blogContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="VoResultMap" type="com.tqk.blog.vo.BlogVo">
    <id column="blog_id" property="blogId"/>
    <result column="blog_title" property="blogTitle"/>
    <result column="blog_image" property="blogImage"/>
    <result column="blog_content" property="blogContent"/>
    <result column="blog_goods" property="blogGoods"/>
    <result column="blog_read" property="blogRead"/>
    <result column="blog_collection" property="blogCollection"/>
    <result column="type_name" property="typeName"/>
    <result column="blog_remark" property="blogRemark"/>
    <result column="blog_comment" property="blogComment"/>
    <result column="blog_source" property="blogSource"/>
    <result column="blog_month" property="blogMonth"/>
    <result column="created_time" property="createdTime"/>
    <result column="update_time" property="updateTime"/>
  </resultMap>

  <!-- 通用查询结果列 -->
  <sql id="Base_Column_List">
    blog_id, blog_title,blog_image, blog_content, blog_goods,
    blog_read, blog_collection, blog_type, blog_remark, blog_comment,
    blog_source, created_time, update_time, version, deleted
  </sql>
  <insert id="save" parameterType="com.tqk.blog.pojo.BlBlog">
    insert into bl_blog(
    blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source
    ) values (
    #{blogId}, #{blogTitle}, #{blogImage}, #{blogContent}, #{blogType}, #{blogRemark}, #{blogSource}
    )
  </insert>
  <update id="update" parameterType="com.tqk.blog.pojo.BlBlog">
    update bl_blog set
    version = version + 1
    <if test="blogTitle!=null and blogTitle!=''">
      ,blog_title = #{blogTitle}
    </if>
    <if test="blogImage!=null and blogImage!=''">
      ,blog_image = #{blogImage}
    </if>
    <if test="blogContent!=null and blogContent!=''">
      ,blog_content = #{blogContent}
    </if>
    <if test="blogGoods!=null">
      ,blog_goods = #{blogGoods}
    </if>
    <if test="blogRead!=null">
      ,blog_read = #{blogRead}
    </if>
    <if test="blogCollection!=null">
      ,blog_collection = #{blogCollection}
    </if>
    <if test="blogType!=null">
      ,blog_type = #{blogType}
    </if>
    <if test="blogRemark!=null and blogRemark!=''">
      ,blog_remark = #{blogRemark}
    </if>
    <if test="blogComment!=null">
      ,blog_comment = #{blogComment}
    </if>
    <if test="blogSource!=null and blogSource!=''">
      ,blog_source = #{blogSource}
    </if>
    where blog_id = #{blogId}
    and version = #{version}
  </update>
  <update id="deleteById">
    update bl_blog set
    deleted = 1
    where blog_id = #{id}
  </update>
  <update id="updateGoods">
    update bl_blog set
    blog_goods = blog_goods + 1
    where blog_id = #{id}
  </update>
  <select id="getById" resultMap="BaseResultMap">
    select
    blog_id, blog_title, blog_content, blog_goods, blog_image,
    blog_read, blog_collection, blog_type, blog_remark,
    blog_comment, blog_source, created_time, version
    from bl_blog
    where blog_id = #{blogId}
    and deleted = 0
  </select>
  <select id="getByPage" parameterType="com.tqk.blog.utils.Page" resultMap="VoResultMap">
    select
    blog_id, blog_title, blog_image, blog_goods,
    blog_read, blog_collection, blog_remark, blog_comment,
    blog_source, created_time, update_time,type_name
    from bl_blog as b
    inner join bl_type as t
    on type_id = blog_type
    where t.deleted = 0 and b.deleted = 0
    <if test="params.blogTitle!=null and params.blogTitle!=''">
      and blog_title like CONCAT('%', #{params.blogTitle}, '%')
    </if>
    <if test="params.typeId!=null and params.typeId!=''">
      and type_id = #{params.typeId}
    </if>
    <if test="sortColumn!=null and sortColumn!=''">
      order by ${sortColumn} ${sortMethod}
    </if>
    limit #{index}, #{pageSize}
  </select>
  <select id="getCountByPage" parameterType="com.tqk.blog.utils.Page" resultType="java.lang.Integer">
    select
    count(*)
    from bl_blog as b
    inner join bl_type as t
    on type_id = blog_type
    where t.deleted = 0 and b.deleted = 0
    <if test="params.blogTitle!=null and params.blogTitle!=''">
      and blog_title like CONCAT('%', #{params.blogTitle}, '%')
    </if>
    <if test="params.typeId!=null and params.typeId!=''">
      and type_id = #{params.typeId}
    </if>
  </select>
  <select id="recomRead" resultMap="VoResultMap">
    select
    blog_id, blog_title, blog_goods,
    blog_read, blog_collection, blog_comment,
    created_time,type_name
    from bl_blog as b
    inner join bl_type as t
    on type_id = blog_type
    where t.deleted = 0 and b.deleted = 0
    order by (blog_read + blog_goods) desc
    limit 5
  </select>
  <select id="getTimeLine" resultMap="VoResultMap">
    select
    blog_id, blog_title,
    created_time,
    date_format(created_time, '%Y-%m') as blog_month
    from bl_blog
    order by created_time desc
  </select>
</mapper>