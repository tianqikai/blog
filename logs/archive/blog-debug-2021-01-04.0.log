2021-01-04 23:27:02.021 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2021-01-04 23:27:47.623 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2021-01-04 23:27:47.658 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2021-01-04 23:27:47.720 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2021-01-04 23:27:47.889 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:27:47.893 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@1fd058a5](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"token":"6AD09FB84BEDD791570D0EABE186880F"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:27:47.978 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:27:48.115 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:27:48.117 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:27:48.198 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:27:48.707 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE ( enable = ? and deleted = ? ) 
2021-01-04 23:27:48.709 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==> Parameters: 1(Integer), 0(Integer)
2021-01-04 23:27:48.750 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -<==      Total: 7
2021-01-04 23:27:48.805 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:27:48.809 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 153(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:27:48.889 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:00.300 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2021-01-04 23:28:00.301 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2021-01-04 23:28:00.342 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 7
2021-01-04 23:28:00.386 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:00.389 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:00.476 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:11.685 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-01-04 23:28:11.686 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-01-04 23:28:11.729 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 3
2021-01-04 23:28:11.732 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-01-04 23:28:11.734 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-01-04 23:28:11.772 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-01-04 23:28:11.897 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:11.898 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 270(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:11.979 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:17.104 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2021-01-04 23:28:17.106 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2021-01-04 23:28:17.152 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2021-01-04 23:28:17.209 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:17.210 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:17.291 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:23.333 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:23.334 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@563c5380](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":""}(String), 192.168.101.29(String)
2021-01-04 23:28:23.415 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:26.938 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2021-01-04 23:28:26.940 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2021-01-04 23:28:26.978 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2021-01-04 23:28:26.983 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ? 
2021-01-04 23:28:26.986 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -==> Parameters: BeanUtils.copyProperties的用法(String), Java(String), BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。(String), 0(Integer), 0(Integer), 0(Integer), 1(Integer), BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。(String), 0(Integer), 百度(String), 1324038097171820544(String), 2(Integer)
2021-01-04 23:28:27.059 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -<==    Updates: 1
2021-01-04 23:28:27.185 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:27.187 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/update(String), [com.tqk.blog.pojo.BlBlog@28de103](String), 1(Integer), null, PUT(String), 286(Long), {"code":20000,"msg":"更新成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:27.269 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:37.321 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2021-01-04 23:28:37.322 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2021-01-04 23:28:37.364 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 7
2021-01-04 23:28:37.411 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:37.414 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:37.496 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:28:55.997 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-01-04 23:28:55.999 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-01-04 23:28:56.038 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 3
2021-01-04 23:28:56.040 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-01-04 23:28:56.041 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-01-04 23:28:56.077 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-01-04 23:28:56.194 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:28:56.197 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 234(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2021-01-04 15:28:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2021-01-04 23:28:56.282 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:29:05.396 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:29:05.398 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6297bcfc](String), 1(Integer), null, POST(String), 3(Long), {"code":20000,"data":""}(String), 192.168.101.29(String)
2021-01-04 23:29:05.485 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2021-01-04 23:29:13.834 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-01-04 23:29:13.836 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1e2deda3](String), 1(Integer), null, POST(String), 5(Long), {"code":20000,"data":""}(String), 192.168.101.29(String)
2021-01-04 23:29:13.921 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
