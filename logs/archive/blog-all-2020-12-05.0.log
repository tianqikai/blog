2020-12-05 11:28:05.255 INFO  [main]com.tqk.blog.BlogApplication.logStarting:55 -Starting BlogApplication on WIN-LFFH2UEU8RH with PID 11156 (D:\javaweb\blog\target\classes started by Administrator in D:\javaweb\blog)
2020-12-05 11:28:05.265 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-12-05 11:28:05.269 INFO  [main]com.tqk.blog.BlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-12-05 11:28:06.815 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.014 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.tqk.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$10aab436] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.090 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-tk.mybatis.mapper.autoconfigure.MybatisProperties' of type [tk.mybatis.mapper.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.106 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration' of type [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$59a83764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.111 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bd63853d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.117 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-12-05 11:28:07.199 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.221 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:07.257 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:10.969 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-12-05 11:28:10.970 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.075 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.464 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.474 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.562 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [com.sun.proxy.$Proxy86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.604 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.tqk.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:11.606 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.tqk.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:12.119 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:12.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-05 11:28:12.211 ERROR [main]org.apache.catalina.core.AprLifecycleListener.log:173 -An incompatible version [1.1.30] of the APR based Apache Tomcat Native library is installed, while Tomcat requires version [1.2.14]
2020-12-05 11:28:12.425 ERROR [main]org.apache.catalina.core.AprLifecycleListener.log:173 -An incompatible version [1.1.30] of the APR based Apache Tomcat Native library is installed, while Tomcat requires version [1.2.14]
2020-12-05 11:28:12.630 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 8899 (http)
2020-12-05 11:28:12.648 ERROR [main]org.apache.catalina.core.AprLifecycleListener.log:173 -An incompatible version [1.1.30] of the APR based Apache Tomcat Native library is installed, while Tomcat requires version [1.2.14]
2020-12-05 11:28:12.649 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8899"]
2020-12-05 11:28:12.650 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-12-05 11:28:12.650 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-12-05 11:28:12.780 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-12-05 11:28:12.780 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7422 ms
2020-12-05 11:28:14.237 INFO  [main]o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:171 -Initializing ExecutorService 'applicationTaskExecutor'
2020-12-05 11:28:14.674 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8899"]
2020-12-05 11:28:14.714 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 8899 (http) with context path ''
2020-12-05 11:28:14.718 INFO  [main]com.tqk.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.424 seconds (JVM running for 11.112)
2020-12-05 11:28:35.978 INFO  [http-nio-8899-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-05 11:28:35.979 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-12-05 11:28:36.039 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 60 ms
2020-12-05 11:28:36.199 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/login
2020-12-05 11:28:36.200 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:28:36.203 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:36.205 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.login
2020-12-05 11:28:36.206 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[com.tqk.blog.pojo.BlAdmin@43e39b03]
2020-12-05 11:28:36.216 INFO  [http-nio-8899-exec-1]com.tqk.blog.controller.AdminController.login:40 -com.tqk.blog.pojo.BlAdmin@43e39b03
2020-12-05 11:28:36.298 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-12-05 11:28:36.333 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-12-05 11:28:36.397 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-12-05 11:28:36.419 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 220
2020-12-05 11:28:36.516 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"token":"A08DA99C6FFB92253779072E81A28BA2"},"msg":"操作成功！"}
2020-12-05 11:28:36.561 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:36.569 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@43e39b03](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"token":"A08DA99C6FFB92253779072E81A28BA2"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:36.649 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:36.734 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/info
2020-12-05 11:28:36.735 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-05 11:28:36.735 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:36.736 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.getLoginInfo
2020-12-05 11:28:36.736 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-05 11:28:36.737 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 3
2020-12-05 11:28:36.743 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}
2020-12-05 11:28:36.780 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:36.782 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:36.867 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:36.975 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/getList
2020-12-05 11:28:36.975 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-05 11:28:36.976 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:36.976 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.getList
2020-12-05 11:28:36.976 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-05 11:28:37.064 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE ( enable = ? and deleted = ? ) 
2020-12-05 11:28:37.067 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==> Parameters: 1(Integer), 0(Integer)
2020-12-05 11:28:37.106 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -<==      Total: 4
2020-12-05 11:28:37.107 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 132
2020-12-05 11:28:37.114 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}
2020-12-05 11:28:37.153 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:37.155 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 132(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:37.235 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:39.592 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2020-12-05 11:28:39.593 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-05 11:28:39.594 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:39.595 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2020-12-05 11:28:39.595 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-05 11:28:39.636 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-12-05 11:28:39.637 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-12-05 11:28:39.673 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-12-05 11:28:39.674 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 82
2020-12-05 11:28:39.674 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}
2020-12-05 11:28:39.712 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:39.713 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 82(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:39.798 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:42.614 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-05 11:28:42.615 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:28:42.616 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:42.617 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-05 11:28:42.618 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:28:42.738 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-12-05 11:28:42.741 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:28:42.780 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 3
2020-12-05 11:28:42.782 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-12-05 11:28:42.783 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:28:42.820 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:28:42.891 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 277
2020-12-05 11:28:42.907 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:28:42.948 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:42.950 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 277(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:43.040 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:43.691 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /about/getByPage
2020-12-05 11:28:43.691 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:28:43.691 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:43.692 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AboutController.getByPage
2020-12-05 11:28:43.692 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:28:43.738 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, about_content, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-12-05 11:28:43.739 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:28:43.784 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -<==      Total: 2
2020-12-05 11:28:43.835 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-12-05 11:28:43.836 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:28:43.871 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:28:43.872 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 182
2020-12-05 11:28:43.879 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutContent":"<p>最近，上海、天津等地出现个别疫情，也出现了将患者或相关人士的信息在网络上泄露，影响这些人的生活的事件。还有关于清华&ldquo;学姐&rdquo;在网络上的基于误会将一个男生的信息曝光的事件，更有一些快递公司&ldquo;内鬼&rdquo;泄露大量客户的详细信息的事件。这些其实都把个人隐私的保护上所出现的问题推到了前台。一方面确实接连出现那种个人隐私被泄露的事件，另一方面这些隐私的泄露所造成的实实在在的损害在这些例子中也都有充分的展现。</p>\n<p>个人隐私的保护，既是对于个人权利的尊重，也对于社会具有重要的意义。隐私的保护对于个体来说当然是重要的，因为个人的隐私的泄露当然会对个体由多方面的伤害，让个体的正常生活受到冲击和威胁。对于社会来说，个人的隐私的保护其实也是使社会生活更加安全的重要的保障。个人的隐私受到保护，既是在法律上十分清晰的，也是在伦理上极为必要的。这其实也是一个重要的社会底线。</p>\n<p>网络和大数据的发展使得个人的信息的搜集和处理都更加便捷和迅速。社会为了更便捷地运作和有效地运转，为了公众利益和为个体更好地服务，往往更多地搜集个人的多方面的资料，个人的资料为相关的方面所掌握在社会中也是必要的。但这当然不可能是无限度无底线的，这些其实都有法律的严格规定，也有伦理的基本的原则。实际上，这些界限其实是相当明确和清晰的。</p>\n<p>现在所出现的一些情况，就是完全违反了这些基本的限定，一些人随意地把他人的隐私信息在互联网这样的无远弗届的公共空间泄露。这种泄露造成的诸如&ldquo;网暴&rdquo;&ldquo;社交死亡&rdquo;等等现象现在在社会中已经成为的相当多的存在。个人的行为的许多不需要也不应该为公众广泛了解的一些情况，在被人们在公共空间中暴露，当然会对个人形成相当的伤害，也会让一些居心不良的人所利用，同时也会对于社会中的人们基本的安全的诉求构成冲击。</p>\n<p>有些人误解了基于&ldquo;公众利益&rdquo;的对于个人的信息的适度的披露和揭隐私、揭老底一类的恶俗行为的的关系，往往把过去小社区中的街谈巷议等等直接放到了所有人的公共空间的互联网上。也有人把&ldquo;群&rdquo;还是看成小圈子，小群体，传播有限，不知道实际上这种传播只要在网上，就可以是全社会的传播。有些接触一般人难以接触的资料的人，也并不觉得泄露这些是严重的事情。这其实和一些人缺少公共空间与私人生活的界限有关，也与当下的新的技术手段造成的便捷的传播有关。这些都构成了对于隐私的保护的冲击，这种冲击没有被有效制止，侵害隐私的行为没有得到惩戒和批评，就会产生&ldquo;示范效应&rdquo;，使得这样的情况一一发不可收拾，构成对于个人和社会的严重伤害。</p>\n<p>严格对于隐私保护的相关法律的执行，对于隐私保护的伦理要求也需要受到公众和社会的更多的维护。让人们生活在一个个人的隐私不能被随便泄露的状况中，这也需要全社会的更多的努力。</p>","aboutId":"1","aboutRead":1,"aboutTitle":"“社交死亡”现象越来越多 ，该如何保护个人隐私","createdTime":1603782451000,"enable":1,"updateTime":1606199712000},{"aboutContent":"你好(*´▽｀)ノノ","aboutId":"3","aboutRead":3,"aboutTitle":"hello","createdTime":1603780570000,"enable":0,"updateTime":1603782499000}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:28:43.918 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:43.919 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 182(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutContent":"<p>最近，上海、天津等地出现个别疫情，也出现了将患者或相关人士的信息在网络上泄露，影响这些人的生活的事件。还有关于清华&ldquo;学姐&rdquo;在网络上的基于误会将一个男生的信息曝光的事件，更有一些快递公司&ldquo;内鬼&rdquo;泄露大量客户的详细信息的事件。这些其实都把个人隐私的保护上所出现的问题推到了前台。一方面确实接连出现那种个人隐私被泄露的事件，另一方面这些隐私的泄露所造成的实实在在的损害在这些例子中也都有充分的展现。</p>\n<p>个人隐私的保护，既是对于个人权利的尊重，也对于社会具有重要的意义。隐私的保护对于个体来说当然是重要的，因为个人的隐私的泄露当然会对个体由多方面的伤害，让个体的正常生活受到冲击和威胁。对于社会来说，个人的隐私的保护其实也是使社会生活更加安全的重要的保障。个人的隐私受到保护，既是在法律上十分清晰的，也是在伦理上极为必要的。这其实也是一个重要的社会底线。</p>\n<p>网络和大数据的发展使得个人的信息的搜集和处理都更加便捷和迅速。社会为了更便捷地运作和有效地运转，为了公众利益和为个体更好地服务，往往更多地搜集个人的多方面的资料，个人的资料为相关的方面所掌握在社会中也是必要的。但这当然不可能是无限度无底线的，这些其实都有法律的严格规定，也有伦理的基本的原则。实际上，这些界限其实是相当明确和清晰的。</p>\n<p>现在所出现的一些情况，就是完全违反了这些基本的限定，一些人随意地把他人的隐私信息在互联网这样的无远弗届的公共空间泄露。这种泄露造成的诸如&ldquo;网暴&rdquo;&ldquo;社交死亡&rdquo;等等现象现在在社会中已经成为的相当多的存在。个人的行为的许多不需要也不应该为公众广泛了解的一些情况，在被人们在公共空间中暴露，当然会对个人形成相当的伤害，也会让一些居心不良的人所利用，同时也会对于社会中的人们基本的安全的诉求构成冲击。</p>\n<p>有些人误解了基于&ldquo;公众利益&rdquo;的对于个人的信息的适度的披露和揭隐私、揭老底一类的恶俗行为的的关系，往往把过去小社区中的街谈巷议等等直接放到了所有人的公共空间的互联网上。也有人把&ldquo;群&rdquo;还是看成小圈子，小群体，传播有限，不知道实际上这种传播只要在网上，就可以是全社会的传播。有些接触一般人难以接触的资料的人，也并不觉得泄露这些是严重的事情。这其实和一些人缺少公共空间与私人生活的界限有关，也与当下的新的技术手段造成的便捷的传播有关。这些都构成了对于隐私的保护的冲击，这种冲击没有被有效制止，侵害隐私的行为没有得到惩戒和批评，就会产生&ldquo;示范效应&rdquo;，使得这样的情况一一发不可收拾，构成对于个人和社会的严重伤害。</p>\n<p>严格对于隐私保护的相关法律的执行，对于隐私保护的伦理要求也需要受到公众和社会的更多的维护。让人们生活在一个个人的隐私不能被随便泄露的状况中，这也需要全社会的更多的努力。</p>","aboutId":"1","aboutRead":1,"aboutTitle":"“社交死亡”现象越来越多 ，该如何保护个人隐私","createdTime":1603782451000,"enable":1,"updateTime":1606199712000},{"aboutContent":"你好(*´▽｀)ノノ","aboutId":"3","aboutRead":3,"aboutTitle":"hello","createdTime":1603780570000,"enable":0,"updateTime":1603782499000}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:43.998 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:47.008 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /user/getByPage
2020-12-05 11:28:47.009 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:28:47.010 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:47.011 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.UserController.getByPage
2020-12-05 11:28:47.012 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:28:47.056 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-12-05 11:28:47.057 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:28:47.092 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getByPage.debug:159 -<==      Total: 1
2020-12-05 11:28:47.129 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-12-05 11:28:47.130 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:28:47.166 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlUserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:28:47.167 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 159
2020-12-05 11:28:47.174 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603955993000,"header":"哈哈哈","name":"天气开","nickname":"一切皆文件","sex":1,"updateTime":1603955993000,"userEmail":"953811508@qq.com","userId":4,"username":"田起凯"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:28:47.292 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:47.294 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 159(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603955993000,"header":"哈哈哈","name":"天气开","nickname":"一切皆文件","sex":1,"updateTime":1603955993000,"userEmail":"953811508@qq.com","userId":4,"username":"田起凯"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:47.373 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:28:48.723 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /log/getByPage
2020-12-05 11:28:48.724 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:28:48.725 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:28:48.726 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.LogController.getByPage
2020-12-05 11:28:48.726 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:28:48.774 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-12-05 11:28:48.776 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:28:48.818 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -<==      Total: 10
2020-12-05 11:28:48.859 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-12-05 11:28:48.861 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:28:48.899 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:28:48.901 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 178
2020-12-05 11:28:48.910 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603177676000,"logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179396000,"logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179406000,"logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":6,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179407000,"logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":3,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179408000,"logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":4,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179411000,"logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179644000,"logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179649000,"logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179705000,"logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":16,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179730000,"logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"欢迎登陆莫兰迪酒店！\"","logStatus":1,"logTime":9,"logUrl":"/hotel/welcome"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":534,"totalPage":54},"msg":"操作成功！"}
2020-12-05 11:28:48.956 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:28:48.959 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603177676000,"logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179396000,"logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179406000,"logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":6,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179407000,"logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":3,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179408000,"logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":4,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179411000,"logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179644000,"logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179649000,"logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179705000,"logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":16,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179730000,"logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"欢迎登陆莫兰迪酒店！\"","logStatus":1,"logTime":9,"logUrl":"/hotel/welcome"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":534,"totalPage":54},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:28:49.045 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:00.995 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /music/getByPage
2020-12-05 11:31:00.996 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:31:00.997 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:00.997 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.MusicController.getByPage
2020-12-05 11:31:00.998 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:31:01.050 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, created_time, enable from bl_music where deleted = 0 limit ?, ? 
2020-12-05 11:31:01.051 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:31:01.088 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getByPage.debug:159 -<==      Total: 2
2020-12-05 11:31:01.133 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-12-05 11:31:01.134 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:31:01.170 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlMusicMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:31:01.171 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 176
2020-12-05 11:31:01.180 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"乔伊·汉森","cover":"XXXX","createdTime":20201026231000,"enable":1,"id":2,"name":"Traveling Light","url":"I found my freedom now"},{"artist":"Music genius","cover":"词不达意","createdTime":20201026231000,"enable":0,"id":3,"name":"没有撤退可言","url":"I found my freedom now"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:31:01.219 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:01.221 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 176(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"乔伊·汉森","cover":"XXXX","createdTime":20201026231000,"enable":1,"id":2,"name":"Traveling Light","url":"I found my freedom now"},{"artist":"Music genius","cover":"词不达意","createdTime":20201026231000,"enable":0,"id":3,"name":"没有撤退可言","url":"I found my freedom now"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:01.300 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:18.028 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /link/list
2020-12-05 11:31:18.029 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-05 11:31:18.030 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:18.030 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.LinkController.list
2020-12-05 11:31:18.032 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-05 11:31:18.077 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, version from bl_link where deleted='0' 
2020-12-05 11:31:18.078 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLinkMapper.getAll.debug:159 -==> Parameters: 
2020-12-05 11:31:18.116 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLinkMapper.getAll.debug:159 -<==      Total: 1
2020-12-05 11:31:18.117 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 90
2020-12-05 11:31:18.120 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"linkId":1,"linkName":"百度一下","linkUrl":"https://baidu.com/","version":2}],"msg":"操作成功！"}
2020-12-05 11:31:18.157 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:18.158 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"linkId":1,"linkName":"百度一下","linkUrl":"https://baidu.com/","version":2}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:18.245 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:23.539 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /about/getByPage
2020-12-05 11:31:23.540 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:31:23.541 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:23.541 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AboutController.getByPage
2020-12-05 11:31:23.542 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:31:23.581 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, about_content, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-12-05 11:31:23.582 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:31:23.619 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getByPage.debug:159 -<==      Total: 2
2020-12-05 11:31:23.658 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-12-05 11:31:23.659 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:31:23.695 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:31:23.696 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 157
2020-12-05 11:31:23.697 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutContent":"<p>最近，上海、天津等地出现个别疫情，也出现了将患者或相关人士的信息在网络上泄露，影响这些人的生活的事件。还有关于清华&ldquo;学姐&rdquo;在网络上的基于误会将一个男生的信息曝光的事件，更有一些快递公司&ldquo;内鬼&rdquo;泄露大量客户的详细信息的事件。这些其实都把个人隐私的保护上所出现的问题推到了前台。一方面确实接连出现那种个人隐私被泄露的事件，另一方面这些隐私的泄露所造成的实实在在的损害在这些例子中也都有充分的展现。</p>\n<p>个人隐私的保护，既是对于个人权利的尊重，也对于社会具有重要的意义。隐私的保护对于个体来说当然是重要的，因为个人的隐私的泄露当然会对个体由多方面的伤害，让个体的正常生活受到冲击和威胁。对于社会来说，个人的隐私的保护其实也是使社会生活更加安全的重要的保障。个人的隐私受到保护，既是在法律上十分清晰的，也是在伦理上极为必要的。这其实也是一个重要的社会底线。</p>\n<p>网络和大数据的发展使得个人的信息的搜集和处理都更加便捷和迅速。社会为了更便捷地运作和有效地运转，为了公众利益和为个体更好地服务，往往更多地搜集个人的多方面的资料，个人的资料为相关的方面所掌握在社会中也是必要的。但这当然不可能是无限度无底线的，这些其实都有法律的严格规定，也有伦理的基本的原则。实际上，这些界限其实是相当明确和清晰的。</p>\n<p>现在所出现的一些情况，就是完全违反了这些基本的限定，一些人随意地把他人的隐私信息在互联网这样的无远弗届的公共空间泄露。这种泄露造成的诸如&ldquo;网暴&rdquo;&ldquo;社交死亡&rdquo;等等现象现在在社会中已经成为的相当多的存在。个人的行为的许多不需要也不应该为公众广泛了解的一些情况，在被人们在公共空间中暴露，当然会对个人形成相当的伤害，也会让一些居心不良的人所利用，同时也会对于社会中的人们基本的安全的诉求构成冲击。</p>\n<p>有些人误解了基于&ldquo;公众利益&rdquo;的对于个人的信息的适度的披露和揭隐私、揭老底一类的恶俗行为的的关系，往往把过去小社区中的街谈巷议等等直接放到了所有人的公共空间的互联网上。也有人把&ldquo;群&rdquo;还是看成小圈子，小群体，传播有限，不知道实际上这种传播只要在网上，就可以是全社会的传播。有些接触一般人难以接触的资料的人，也并不觉得泄露这些是严重的事情。这其实和一些人缺少公共空间与私人生活的界限有关，也与当下的新的技术手段造成的便捷的传播有关。这些都构成了对于隐私的保护的冲击，这种冲击没有被有效制止，侵害隐私的行为没有得到惩戒和批评，就会产生&ldquo;示范效应&rdquo;，使得这样的情况一一发不可收拾，构成对于个人和社会的严重伤害。</p>\n<p>严格对于隐私保护的相关法律的执行，对于隐私保护的伦理要求也需要受到公众和社会的更多的维护。让人们生活在一个个人的隐私不能被随便泄露的状况中，这也需要全社会的更多的努力。</p>","aboutId":"1","aboutRead":1,"aboutTitle":"“社交死亡”现象越来越多 ，该如何保护个人隐私","createdTime":1603782451000,"enable":1,"updateTime":1606199712000},{"aboutContent":"你好(*´▽｀)ノノ","aboutId":"3","aboutRead":3,"aboutTitle":"hello","createdTime":1603780570000,"enable":0,"updateTime":1603782499000}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:31:23.734 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:23.735 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 157(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutContent":"<p>最近，上海、天津等地出现个别疫情，也出现了将患者或相关人士的信息在网络上泄露，影响这些人的生活的事件。还有关于清华&ldquo;学姐&rdquo;在网络上的基于误会将一个男生的信息曝光的事件，更有一些快递公司&ldquo;内鬼&rdquo;泄露大量客户的详细信息的事件。这些其实都把个人隐私的保护上所出现的问题推到了前台。一方面确实接连出现那种个人隐私被泄露的事件，另一方面这些隐私的泄露所造成的实实在在的损害在这些例子中也都有充分的展现。</p>\n<p>个人隐私的保护，既是对于个人权利的尊重，也对于社会具有重要的意义。隐私的保护对于个体来说当然是重要的，因为个人的隐私的泄露当然会对个体由多方面的伤害，让个体的正常生活受到冲击和威胁。对于社会来说，个人的隐私的保护其实也是使社会生活更加安全的重要的保障。个人的隐私受到保护，既是在法律上十分清晰的，也是在伦理上极为必要的。这其实也是一个重要的社会底线。</p>\n<p>网络和大数据的发展使得个人的信息的搜集和处理都更加便捷和迅速。社会为了更便捷地运作和有效地运转，为了公众利益和为个体更好地服务，往往更多地搜集个人的多方面的资料，个人的资料为相关的方面所掌握在社会中也是必要的。但这当然不可能是无限度无底线的，这些其实都有法律的严格规定，也有伦理的基本的原则。实际上，这些界限其实是相当明确和清晰的。</p>\n<p>现在所出现的一些情况，就是完全违反了这些基本的限定，一些人随意地把他人的隐私信息在互联网这样的无远弗届的公共空间泄露。这种泄露造成的诸如&ldquo;网暴&rdquo;&ldquo;社交死亡&rdquo;等等现象现在在社会中已经成为的相当多的存在。个人的行为的许多不需要也不应该为公众广泛了解的一些情况，在被人们在公共空间中暴露，当然会对个人形成相当的伤害，也会让一些居心不良的人所利用，同时也会对于社会中的人们基本的安全的诉求构成冲击。</p>\n<p>有些人误解了基于&ldquo;公众利益&rdquo;的对于个人的信息的适度的披露和揭隐私、揭老底一类的恶俗行为的的关系，往往把过去小社区中的街谈巷议等等直接放到了所有人的公共空间的互联网上。也有人把&ldquo;群&rdquo;还是看成小圈子，小群体，传播有限，不知道实际上这种传播只要在网上，就可以是全社会的传播。有些接触一般人难以接触的资料的人，也并不觉得泄露这些是严重的事情。这其实和一些人缺少公共空间与私人生活的界限有关，也与当下的新的技术手段造成的便捷的传播有关。这些都构成了对于隐私的保护的冲击，这种冲击没有被有效制止，侵害隐私的行为没有得到惩戒和批评，就会产生&ldquo;示范效应&rdquo;，使得这样的情况一一发不可收拾，构成对于个人和社会的严重伤害。</p>\n<p>严格对于隐私保护的相关法律的执行，对于隐私保护的伦理要求也需要受到公众和社会的更多的维护。让人们生活在一个个人的隐私不能被随便泄露的状况中，这也需要全社会的更多的努力。</p>","aboutId":"1","aboutRead":1,"aboutTitle":"“社交死亡”现象越来越多 ，该如何保护个人隐私","createdTime":1603782451000,"enable":1,"updateTime":1606199712000},{"aboutContent":"你好(*´▽｀)ノノ","aboutId":"3","aboutRead":3,"aboutTitle":"hello","createdTime":1603780570000,"enable":0,"updateTime":1603782499000}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:23.838 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:24.501 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-05 11:31:24.501 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:31:24.502 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:24.502 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-05 11:31:24.502 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:31:24.574 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-12-05 11:31:24.575 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:31:24.613 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 3
2020-12-05 11:31:24.614 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-12-05 11:31:24.614 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:31:24.649 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2020-12-05 11:31:24.649 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-05 11:31:24.650 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:24.650 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:31:24.651 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2020-12-05 11:31:24.652 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-05 11:31:24.690 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-12-05 11:31:24.691 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-12-05 11:31:24.722 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 221
2020-12-05 11:31:24.723 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-05 11:31:24.729 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-12-05 11:31:24.730 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 81
2020-12-05 11:31:24.730 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}
2020-12-05 11:31:24.759 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:24.760 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:24.770 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:24.771 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:24.846 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:24.853 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-12-05 11:31:52.015 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /log/getByPage
2020-12-05 11:31:52.016 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-05 11:31:52.017 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-05 11:31:52.018 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.LogController.getByPage
2020-12-05 11:31:52.019 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-05 11:31:52.060 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-12-05 11:31:52.061 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-12-05 11:31:52.102 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getByPage.debug:159 -<==      Total: 10
2020-12-05 11:31:52.140 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-12-05 11:31:52.141 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-12-05 11:31:52.180 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-12-05 11:31:52.181 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 166
2020-12-05 11:31:52.182 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603177676000,"logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179396000,"logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179406000,"logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":6,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179407000,"logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":3,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179408000,"logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":4,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179411000,"logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179644000,"logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179649000,"logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179705000,"logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":16,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179730000,"logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"欢迎登陆莫兰迪酒店！\"","logStatus":1,"logTime":9,"logUrl":"/hotel/welcome"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":540,"totalPage":54},"msg":"操作成功！"}
2020-12-05 11:31:52.221 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-12-05 11:31:52.224 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 166(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603177676000,"logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179396000,"logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179406000,"logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":6,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179407000,"logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":3,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179408000,"logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":4,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179411000,"logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179644000,"logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179649000,"logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179705000,"logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":16,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179730000,"logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"欢迎登陆莫兰迪酒店！\"","logStatus":1,"logTime":9,"logUrl":"/hotel/welcome"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":540,"totalPage":54},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-12-05 11:31:52.306 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
