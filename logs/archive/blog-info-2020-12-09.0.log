2020-12-09 21:46:49.183 INFO  [main]com.tqk.blog.BlogApplication.logStarting:55 -Starting BlogApplication on WIN-LFFH2UEU8RH with PID 7924 (D:\javaweb\blog\target\classes started by Administrator in D:\javaweb\blog)
2020-12-09 21:46:49.193 INFO  [main]com.tqk.blog.BlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-12-09 21:46:50.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.tqk.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8bb118e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-tk.mybatis.mapper.autoconfigure.MybatisProperties' of type [tk.mybatis.mapper.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.780 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration' of type [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$d4ae9c12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.785 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3869e9eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.789 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-12-09 21:46:50.856 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:50.905 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:57.491 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-12-09 21:46:57.492 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:57.602 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.000 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.009 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.107 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.115 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [com.sun.proxy.$Proxy86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.157 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.tqk.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.159 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.tqk.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.658 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:58.687 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-09 21:46:59.127 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 8899 (http)
2020-12-09 21:46:59.144 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8899"]
2020-12-09 21:46:59.145 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-12-09 21:46:59.146 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-12-09 21:46:59.284 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-12-09 21:46:59.284 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10016 ms
2020-12-09 21:47:00.430 INFO  [main]o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:171 -Initializing ExecutorService 'applicationTaskExecutor'
2020-12-09 21:47:00.946 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8899"]
2020-12-09 21:47:00.976 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 8899 (http) with context path ''
2020-12-09 21:47:00.979 INFO  [main]com.tqk.blog.BlogApplication.logStarted:61 -Started BlogApplication in 12.694 seconds (JVM running for 13.418)
2020-12-09 21:48:02.429 INFO  [http-nio-8899-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-09 21:48:02.429 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-12-09 21:48:02.448 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-12-09 21:48:02.601 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/login
2020-12-09 21:48:02.604 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:48:02.608 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:48:02.612 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.login
2020-12-09 21:48:02.612 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[com.tqk.blog.pojo.BlAdmin@299b0f8]
2020-12-09 21:48:02.619 INFO  [http-nio-8899-exec-1]com.tqk.blog.controller.AdminController.login:40 -com.tqk.blog.pojo.BlAdmin@299b0f8
2020-12-09 21:48:02.848 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 248
2020-12-09 21:48:02.952 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"token":"3E18F5D5ABF745CA5929CB85FD509F80"},"msg":"操作成功！"}
2020-12-09 21:48:03.178 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/info
2020-12-09 21:48:03.179 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:48:03.179 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:48:03.179 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.getLoginInfo
2020-12-09 21:48:03.179 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:48:03.180 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 2
2020-12-09 21:48:03.187 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}
2020-12-09 21:48:03.715 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/getList
2020-12-09 21:48:03.716 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:48:03.716 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:48:03.717 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.getList
2020-12-09 21:48:03.718 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:48:03.871 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 156
2020-12-09 21:48:03.878 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2020-12-09 21:50:08.808 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/info
2020-12-09 21:50:08.809 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:50:08.809 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:08.810 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.getLoginInfo
2020-12-09 21:50:08.810 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:50:08.811 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 3
2020-12-09 21:50:08.812 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}
2020-12-09 21:50:09.055 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/getList
2020-12-09 21:50:09.056 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:50:09.057 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:09.057 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.getList
2020-12-09 21:50:09.058 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:50:09.136 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 81
2020-12-09 21:50:09.137 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2020-12-09 21:50:12.442 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2020-12-09 21:50:12.443 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:50:12.444 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:12.444 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2020-12-09 21:50:12.444 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:50:12.524 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 82
2020-12-09 21:50:12.525 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2020-12-09 21:50:15.808 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 21:50:15.809 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:50:15.810 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:15.810 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 21:50:15.811 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 21:50:16.063 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 255
2020-12-09 21:50:16.089 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 21:50:18.903 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /about/getByPage
2020-12-09 21:50:18.904 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:50:18.905 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:18.905 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AboutController.getByPage
2020-12-09 21:50:18.906 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 21:50:19.127 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 224
2020-12-09 21:50:19.140 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutContent":"<p>最近，上海、天津等地出现个别疫情，也出现了将患者或相关人士的信息在网络上泄露，影响这些人的生活的事件。还有关于清华&ldquo;学姐&rdquo;在网络上的基于误会将一个男生的信息曝光的事件，更有一些快递公司&ldquo;内鬼&rdquo;泄露大量客户的详细信息的事件。这些其实都把个人隐私的保护上所出现的问题推到了前台。一方面确实接连出现那种个人隐私被泄露的事件，另一方面这些隐私的泄露所造成的实实在在的损害在这些例子中也都有充分的展现。</p>\n<p>个人隐私的保护，既是对于个人权利的尊重，也对于社会具有重要的意义。隐私的保护对于个体来说当然是重要的，因为个人的隐私的泄露当然会对个体由多方面的伤害，让个体的正常生活受到冲击和威胁。对于社会来说，个人的隐私的保护其实也是使社会生活更加安全的重要的保障。个人的隐私受到保护，既是在法律上十分清晰的，也是在伦理上极为必要的。这其实也是一个重要的社会底线。</p>\n<p>网络和大数据的发展使得个人的信息的搜集和处理都更加便捷和迅速。社会为了更便捷地运作和有效地运转，为了公众利益和为个体更好地服务，往往更多地搜集个人的多方面的资料，个人的资料为相关的方面所掌握在社会中也是必要的。但这当然不可能是无限度无底线的，这些其实都有法律的严格规定，也有伦理的基本的原则。实际上，这些界限其实是相当明确和清晰的。</p>\n<p>现在所出现的一些情况，就是完全违反了这些基本的限定，一些人随意地把他人的隐私信息在互联网这样的无远弗届的公共空间泄露。这种泄露造成的诸如&ldquo;网暴&rdquo;&ldquo;社交死亡&rdquo;等等现象现在在社会中已经成为的相当多的存在。个人的行为的许多不需要也不应该为公众广泛了解的一些情况，在被人们在公共空间中暴露，当然会对个人形成相当的伤害，也会让一些居心不良的人所利用，同时也会对于社会中的人们基本的安全的诉求构成冲击。</p>\n<p>有些人误解了基于&ldquo;公众利益&rdquo;的对于个人的信息的适度的披露和揭隐私、揭老底一类的恶俗行为的的关系，往往把过去小社区中的街谈巷议等等直接放到了所有人的公共空间的互联网上。也有人把&ldquo;群&rdquo;还是看成小圈子，小群体，传播有限，不知道实际上这种传播只要在网上，就可以是全社会的传播。有些接触一般人难以接触的资料的人，也并不觉得泄露这些是严重的事情。这其实和一些人缺少公共空间与私人生活的界限有关，也与当下的新的技术手段造成的便捷的传播有关。这些都构成了对于隐私的保护的冲击，这种冲击没有被有效制止，侵害隐私的行为没有得到惩戒和批评，就会产生&ldquo;示范效应&rdquo;，使得这样的情况一一发不可收拾，构成对于个人和社会的严重伤害。</p>\n<p>严格对于隐私保护的相关法律的执行，对于隐私保护的伦理要求也需要受到公众和社会的更多的维护。让人们生活在一个个人的隐私不能被随便泄露的状况中，这也需要全社会的更多的努力。</p>","aboutId":"1","aboutRead":1,"aboutTitle":"“社交死亡”现象越来越多 ，该如何保护个人隐私","createdTime":1603782451000,"enable":1,"updateTime":1606199712000},{"aboutContent":"你好(*´▽｀)ノノ","aboutId":"3","aboutRead":3,"aboutTitle":"hello","createdTime":1603780570000,"enable":0,"updateTime":1603782499000}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-12-09 21:50:25.168 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /user/getByPage
2020-12-09 21:50:25.170 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:50:25.170 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:25.171 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.UserController.getByPage
2020-12-09 21:50:25.171 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 21:50:27.090 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 1922
2020-12-09 21:50:27.097 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603955993000,"header":"哈哈哈","name":"天气开","nickname":"一切皆文件","sex":1,"updateTime":1603955993000,"userEmail":"953811508@qq.com","userId":4,"username":"田起凯"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-12-09 21:50:33.855 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /log/getByPage
2020-12-09 21:50:33.856 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:50:33.856 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:33.856 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.LogController.getByPage
2020-12-09 21:50:33.856 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 21:50:34.043 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 188
2020-12-09 21:50:34.056 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":1603177676000,"logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179396000,"logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179406000,"logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":6,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179407000,"logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":3,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179408000,"logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":4,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179411000,"logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179644000,"logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":14,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179649000,"logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":2,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179705000,"logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"hhhhhhhhhhhhh\"","logStatus":1,"logTime":16,"logUrl":"/BlAdmin/welcome"},{"createdTime":1603179730000,"logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"\"欢迎登陆莫兰迪酒店！\"","logStatus":1,"logTime":9,"logUrl":"/hotel/welcome"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":584,"totalPage":59},"msg":"操作成功！"}
2020-12-09 21:50:38.168 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /music/getByPage
2020-12-09 21:50:38.169 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 21:50:38.170 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:38.171 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.MusicController.getByPage
2020-12-09 21:50:38.172 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 21:50:38.773 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 605
2020-12-09 21:50:38.781 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"乔伊·汉森","cover":"XXXX","createdTime":20201026231000,"enable":1,"id":2,"name":"Traveling Light","url":"I found my freedom now"},{"artist":"Music genius","cover":"词不达意","createdTime":20201026231000,"enable":0,"id":3,"name":"没有撤退可言","url":"I found my freedom now"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-12-09 21:50:40.669 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /link/list
2020-12-09 21:50:40.670 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:50:40.671 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:40.671 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.LinkController.list
2020-12-09 21:50:40.671 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:50:40.765 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 96
2020-12-09 21:50:40.772 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"linkId":1,"linkName":"百度一下","linkUrl":"https://baidu.com/","version":2}],"msg":"操作成功！"}
2020-12-09 21:50:48.625 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2020-12-09 21:50:48.626 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 21:50:48.627 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 21:50:48.627 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2020-12-09 21:50:48.628 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 21:50:50.341 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 1716
2020-12-09 21:50:50.342 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2020-12-09 22:01:54.018 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:01:54.019 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:01:54.020 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:01:54.021 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:01:54.022 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:01:54.892 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 874
2020-12-09 22:01:54.893 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 22:02:03.227 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:03.228 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:03.229 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:03.230 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:03.230 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-22 13:04:15), BlogVo(blogId=1330877080455553024, blogTitle=面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=MySQL, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:13:16, updateTime=2020-11-23 14:23:06), BlogVo(blogId=1330879440221315072, blogTitle=Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=面试必备, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:22:39, updateTime=2020-11-23 14:22:39)], params={typeId=1}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:03.461 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 234
2020-12-09 22:02:03.462 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{"typeId":1},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 22:02:05.338 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:05.339 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:05.339 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:05.340 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:05.341 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-22 13:04:15), BlogVo(blogId=1330877080455553024, blogTitle=面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=MySQL, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:13:16, updateTime=2020-11-23 14:23:06), BlogVo(blogId=1330879440221315072, blogTitle=Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=面试必备, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:22:39, updateTime=2020-11-23 14:22:39)], params={typeId=1}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:06.827 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 1489
2020-12-09 22:02:06.829 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{"typeId":1},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 22:02:12.919 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:12.920 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:12.921 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:12.921 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:12.922 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-22 13:04:15), BlogVo(blogId=1330877080455553024, blogTitle=面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=MySQL, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:13:16, updateTime=2020-11-23 14:23:06), BlogVo(blogId=1330879440221315072, blogTitle=Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=null, blogRemark=面试必备, blogComment=0, blogMonth=null, createdTime=2020-11-23 14:22:39, updateTime=2020-11-23 14:22:39)], params={typeId=6}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:13.186 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 267
2020-12-09 22:02:13.186 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":6},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}
2020-12-09 22:02:20.147 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:20.149 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:20.149 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:20.150 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:20.150 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:20.414 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 267
2020-12-09 22:02:20.415 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":7},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}
2020-12-09 22:02:24.371 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:24.371 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:24.372 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:24.372 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:24.372 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=1}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:24.643 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 272
2020-12-09 22:02:24.644 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{"typeId":1},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 22:02:30.617 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2020-12-09 22:02:30.618 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 22:02:30.618 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:30.619 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2020-12-09 22:02:30.619 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2020-12-09 22:02:30.707 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 90
2020-12-09 22:02:30.708 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2020-12-09 22:02:33.367 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2020-12-09 22:02:33.368 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2020-12-09 22:02:33.368 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:33.369 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2020-12-09 22:02:33.369 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-12-09 22:02:33.638 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 271
2020-12-09 22:02:33.639 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-12-09 22:02:40.127 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/get/1324038097171820544
2020-12-09 22:02:40.129 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2020-12-09 22:02:40.130 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2020-12-09 22:02:40.131 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.get
2020-12-09 22:02:40.131 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[1324038097171820544]
2020-12-09 22:02:41.211 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 1084
2020-12-09 22:02:41.221 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}
