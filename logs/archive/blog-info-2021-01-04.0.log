2021-01-04 23:27:02.012 INFO  [main]com.tqk.blog.BlogApplication.logStarting:55 -Starting BlogApplication on WIN-LFFH2UEU8RH with PID 8300 (D:\javaweb\blog\target\classes started by Administrator in D:\javaweb\blog)
2021-01-04 23:27:02.024 INFO  [main]com.tqk.blog.BlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2021-01-04 23:27:03.478 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.627 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.tqk.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c3a61db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-tk.mybatis.mapper.autoconfigure.MybatisProperties' of type [tk.mybatis.mapper.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration' of type [tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$a537e509] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.717 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8f332e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.723 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2021-01-04 23:27:03.789 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.811 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:03.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:06.759 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2021-01-04 23:27:06.761 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:06.865 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.249 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.257 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.328 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [tk.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.340 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'blAdminMapper' of type [com.sun.proxy.$Proxy87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.384 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.tqk.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.386 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.tqk.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.925 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:07.966 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-04 23:27:08.382 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 8899 (http)
2021-01-04 23:27:08.398 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8899"]
2021-01-04 23:27:08.399 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2021-01-04 23:27:08.400 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2021-01-04 23:27:08.536 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2021-01-04 23:27:08.536 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6417 ms
2021-01-04 23:27:09.741 INFO  [main]o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:171 -Initializing ExecutorService 'applicationTaskExecutor'
2021-01-04 23:27:10.265 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8899"]
2021-01-04 23:27:10.294 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 8899 (http) with context path ''
2021-01-04 23:27:10.298 INFO  [main]com.tqk.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.075 seconds (JVM running for 9.645)
2021-01-04 23:27:47.366 INFO  [http-nio-8899-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-04 23:27:47.367 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2021-01-04 23:27:47.380 INFO  [http-nio-8899-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2021-01-04 23:27:47.525 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/login
2021-01-04 23:27:47.528 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:27:47.531 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:27:47.533 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.login
2021-01-04 23:27:47.534 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[com.tqk.blog.pojo.BlAdmin@1fd058a5]
2021-01-04 23:27:47.541 INFO  [http-nio-8899-exec-1]com.tqk.blog.controller.AdminController.login:40 -com.tqk.blog.pojo.BlAdmin@1fd058a5
2021-01-04 23:27:47.734 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 209
2021-01-04 23:27:47.847 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"token":"6AD09FB84BEDD791570D0EABE186880F"},"msg":"操作成功！"}
2021-01-04 23:27:48.070 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /BlAdmin/info
2021-01-04 23:27:48.071 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2021-01-04 23:27:48.071 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:27:48.071 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.AdminController.getLoginInfo
2021-01-04 23:27:48.072 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2021-01-04 23:27:48.073 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 3
2021-01-04 23:27:48.078 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}
2021-01-04 23:27:48.599 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/getList
2021-01-04 23:27:48.601 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2021-01-04 23:27:48.602 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:27:48.602 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.getList
2021-01-04 23:27:48.603 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2021-01-04 23:27:48.752 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 153
2021-01-04 23:27:48.762 INFO  [http-nio-8899-exec-3]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2021-01-04 23:28:00.253 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2021-01-04 23:28:00.254 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2021-01-04 23:28:00.255 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:00.256 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2021-01-04 23:28:00.257 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2021-01-04 23:28:00.343 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 90
2021-01-04 23:28:00.344 INFO  [http-nio-8899-exec-4]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2021-01-04 23:28:11.575 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2021-01-04 23:28:11.576 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:28:11.577 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:11.577 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2021-01-04 23:28:11.578 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-01-04 23:28:11.845 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 270
2021-01-04 23:28:11.858 INFO  [http-nio-8899-exec-5]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2021-01-04 23:28:17.059 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/get/1324038097171820544
2021-01-04 23:28:17.060 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2021-01-04 23:28:17.061 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:17.062 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.get
2021-01-04 23:28:17.063 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[1324038097171820544]
2021-01-04 23:28:17.154 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 95
2021-01-04 23:28:17.170 INFO  [http-nio-8899-exec-6]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}
2021-01-04 23:28:23.274 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /upload/uploadImage
2021-01-04 23:28:23.275 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:28:23.275 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:23.276 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.UploadController.uploadImage
2021-01-04 23:28:23.277 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@563c5380]
2021-01-04 23:28:23.290 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 16
2021-01-04 23:28:23.291 INFO  [http-nio-8899-exec-7]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":""}
2021-01-04 23:28:26.856 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/update
2021-01-04 23:28:26.857 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : PUT
2021-01-04 23:28:26.858 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:26.858 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.update
2021-01-04 23:28:26.859 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[com.tqk.blog.pojo.BlBlog@28de103]
2021-01-04 23:28:27.142 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 286
2021-01-04 23:28:27.143 INFO  [http-nio-8899-exec-8]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"msg":"更新成功！"}
2021-01-04 23:28:37.276 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /type/listBack
2021-01-04 23:28:37.277 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : GET
2021-01-04 23:28:37.277 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:37.278 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.TypeController.list
2021-01-04 23:28:37.278 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[]
2021-01-04 23:28:37.366 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 90
2021-01-04 23:28:37.367 INFO  [http-nio-8899-exec-9]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":105,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"nginx"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Redis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"Docker"}],"msg":"操作成功！"}
2021-01-04 23:28:55.915 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /blog/getByPage
2021-01-04 23:28:55.916 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:28:55.917 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:28:55.918 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.BlogController.getByPage
2021-01-04 23:28:55.919 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-01-04 23:28:56.149 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 234
2021-01-04 23:28:56.150 INFO  [http-nio-8899-exec-10]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2021-01-04 15:28:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330877080455553024","blogRead":0,"blogRemark":"MySQL","blogTitle":"面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？","createdTime":"2020-11-23 14:13:16","typeName":"Java","updateTime":"2020-11-23 14:23:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1330879440221315072","blogRead":0,"blogRemark":"面试必备","blogTitle":"Java岗四面字节跳动成功之前，我都刷了那些面试题以及做了那些准备！","createdTime":"2020-11-23 14:22:39","typeName":"Java","updateTime":"2020-11-23 14:22:39"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2021-01-04 23:29:05.356 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /upload/uploadImage
2021-01-04 23:29:05.357 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:29:05.357 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:29:05.357 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.UploadController.uploadImage
2021-01-04 23:29:05.358 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6297bcfc]
2021-01-04 23:29:05.359 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 3
2021-01-04 23:29:05.359 INFO  [http-nio-8899-exec-1]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":""}
2021-01-04 23:29:13.788 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:115 -请求地址 : /upload/uploadImage
2021-01-04 23:29:13.789 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:116 -请求方式 : POST
2021-01-04 23:29:13.789 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:119 -IP : 192.168.101.29
2021-01-04 23:29:13.790 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:121 -方法 : com.tqk.blog.controller.UploadController.uploadImage
2021-01-04 23:29:13.791 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.printRequestLog:123 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1e2deda3]
2021-01-04 23:29:13.793 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAround:67 -耗时 : 5
2021-01-04 23:29:13.794 INFO  [http-nio-8899-exec-2]com.tqk.blog.aspect.RequestAspect.doAfterReturning:81 -返回值：{"code":20000,"data":""}
