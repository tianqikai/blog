2020-11-22 00:29:12.708 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 00:44:50.485 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 00:44:50.524 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 00:44:50.596 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 00:44:50.738 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 00:44:50.741 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@2c77a5ef](String), 1(Integer), null, POST(String), 229(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 00:44:50.840 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 00:44:50.960 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 00:44:50.962 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 00:44:51.054 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 08:55:32.542 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 08:55:32.544 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$e7139387.getLoginInfo(<generated>)
(String), GET(String), 0(Long), null, 192.168.101.29(String)
2020-11-22 08:55:32.620 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 08:55:37.490 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 08:55:37.491 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 08:55:37.526 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 08:55:37.563 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 08:55:37.565 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@26e28a7b](String), 1(Integer), null, POST(String), 78(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 08:55:37.646 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 08:55:37.703 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 08:55:37.704 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 08:55:37.837 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 08:58:36.034 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 08:58:36.035 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 08:58:36.114 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:17:01.387 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 09:21:03.171 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 09:21:03.205 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 09:21:03.261 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 09:21:03.384 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:21:03.388 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@40fe995c](String), 1(Integer), null, POST(String), 193(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:21:03.472 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:21:03.629 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:21:03.630 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:21:03.705 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:22:51.142 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:22:51.144 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:22:51.220 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:25:56.048 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:25:56.051 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:25:56.133 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:25:56.176 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:25:56.179 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:25:56.361 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:25:56.400 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:25:56.402 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:25:56.486 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:26:00.420 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 09:26:00.421 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 09:26:00.459 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 09:26:00.502 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:26:00.504 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@239b9b27](String), 1(Integer), null, POST(String), 87(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:26:00.589 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:26:06.480 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:26:06.482 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:26:06.566 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:27:55.883 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:27:55.884 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:27:55.967 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:27:59.864 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:27:59.865 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:27:59.948 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 09:29:44.137 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 09:29:44.139 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 09:29:44.242 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:09:43.307 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:09:43.309 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$53147abb.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:09:43.449 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:03.145 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 10:15:03.146 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 10:15:03.186 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 10:15:03.229 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:03.232 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@355bbc25](String), 1(Integer), null, POST(String), 87(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:03.417 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:03.480 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:03.481 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:03.592 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:06.915 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:15:06.916 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:15:06.954 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 10:15:07.002 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:07.004 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"c语言"},{"deleted":0,"enable":0,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:07.086 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:32.095 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:15:32.097 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:15:32.135 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:15:32.180 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:32.186 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:32.267 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:47.019 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:15:47.020 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:15:47.057 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:15:47.095 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==>  Preparing: UPDATE bl_type SET type_name = ?,type_blog_count = ?,enable = ?,deleted = ? WHERE type_id = ? 
2020-11-22 10:15:47.096 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==> Parameters: Java(String), 102(Integer), 0(Integer), 0(Integer), 1(Integer)
2020-11-22 10:15:47.180 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:15:47.222 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:47.224 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/disable/1(String), [1](String), 1(Integer), null, PUT(String), 207(Long), {"code":20000,"msg":"已弃用"}(String), 192.168.101.29(String)
2020-11-22 10:15:47.310 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:47.373 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:15:47.374 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:15:47.413 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 10:15:47.457 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:47.458 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[{"deleted":0,"enable":0,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"c语言"},{"deleted":0,"enable":0,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:47.547 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:52.617 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:15:52.618 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:15:52.655 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:15:52.697 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==>  Preparing: UPDATE bl_type SET type_name = ?,type_blog_count = ?,enable = ?,deleted = ? WHERE type_id = ? 
2020-11-22 10:15:52.698 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==> Parameters: Java(String), 102(Integer), 1(Integer), 0(Integer), 1(Integer)
2020-11-22 10:15:52.785 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:15:52.826 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:52.827 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/enable/1(String), [1](String), 1(Integer), null, PUT(String), 215(Long), {"code":20000,"msg":"已启用"}(String), 192.168.101.29(String)
2020-11-22 10:15:52.908 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:15:52.960 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:15:52.961 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:15:52.998 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 10:15:53.040 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:15:53.042 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 79(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"c语言"},{"deleted":0,"enable":0,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:15:53.135 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:16:09.749 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.deleteByPrimaryKey.debug:159 -==>  Preparing: DELETE FROM bl_type WHERE type_id = ? 
2020-11-22 10:16:09.750 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.deleteByPrimaryKey.debug:159 -==> Parameters: 2(Integer)
2020-11-22 10:16:09.832 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.deleteByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:16:09.873 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:16:09.875 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/delete/2(String), [2](String), 1(Integer), null, DELETE(String), 129(Long), {"code":20000,"msg":"删除成功！"}(String), 192.168.101.29(String)
2020-11-22 10:16:09.961 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:16:10.020 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:16:10.022 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:16:10.060 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:16:10.103 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:16:10.105 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$53147abb.getLoginInfo(<generated>)
(String), GET(String), 85(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":0,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:16:10.194 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:16:34.214 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:16:34.215 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 3(Integer)
2020-11-22 10:16:34.252 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:16:34.293 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==>  Preparing: UPDATE bl_type SET type_name = ?,type_blog_count = ?,enable = ?,deleted = ? WHERE type_id = ? 
2020-11-22 10:16:34.295 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==> Parameters: Python(String), 0(Integer), 1(Integer), 0(Integer), 3(Integer)
2020-11-22 10:16:34.379 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:16:34.421 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:16:34.422 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/enable/3(String), [3](String), 1(Integer), null, PUT(String), 210(Long), {"code":20000,"msg":"已启用"}(String), 192.168.101.29(String)
2020-11-22 10:16:34.510 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:16:34.570 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:16:34.571 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:16:34.610 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:16:34.651 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:16:34.652 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:16:34.738 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:16:59.007 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:16:59.008 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:16:59.046 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:16:59.088 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:16:59.090 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:16:59.172 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:04.663 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==>  Preparing: UPDATE bl_type SET type_name = ?,type_blog_count = ?,enable = ?,deleted = ? WHERE type_id = ? 
2020-11-22 10:17:04.664 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==> Parameters: Java111(String), 102(Integer), 1(Integer), 0(Integer), 1(Integer)
2020-11-22 10:17:04.746 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:17:04.790 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:04.792 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/update(String), [com.tqk.blog.pojo.BlType@76261deb](String), 1(Integer), null, PUT(String), 130(Long), {"code":20000,"msg":"更新成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:04.873 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:05.248 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:17:05.249 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:17:05.286 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:17:05.328 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:05.329 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java111"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:05.417 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:09.089 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:17:09.091 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:17:09.129 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:17:09.173 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:09.175 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java111"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:09.258 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:12.814 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==>  Preparing: UPDATE bl_type SET type_name = ?,type_blog_count = ?,enable = ?,deleted = ? WHERE type_id = ? 
2020-11-22 10:17:12.815 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -==> Parameters: Java(String), 102(Integer), 1(Integer), 0(Integer), 1(Integer)
2020-11-22 10:17:12.893 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.updateByPrimaryKey.debug:159 -<==    Updates: 1
2020-11-22 10:17:12.934 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:12.936 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/update(String), [com.tqk.blog.pojo.BlType@74d0adcb](String), 1(Integer), null, PUT(String), 122(Long), {"code":20000,"msg":"更新成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:13.017 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:13.084 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:17:13.085 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:17:13.123 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:17:13.167 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:13.168 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 86(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:13.253 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:17:15.440 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:17:15.442 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:17:15.479 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:17:15.522 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:17:15.523 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:17:15.607 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:21:20.113 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:21:20.114 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$53147abb.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:21:20.235 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:21:20.421 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:21:20.421 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:21:20.459 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:21:20.497 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:21:20.498 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:21:20.592 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:21:23.059 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:21:23.061 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:21:23.099 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:21:23.141 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:21:23.142 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 83(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:21:23.226 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:21:36.465 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 10:21:36.466 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 10:21:36.510 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 10:21:36.552 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:21:36.554 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 91(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:21:36.635 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:22:28.372 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_name = ? 
2020-11-22 10:22:28.373 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==> Parameters: going(String)
2020-11-22 10:22:28.411 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -<==      Total: 0
2020-11-22 10:22:28.455 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.insert.debug:159 -==>  Preparing: INSERT INTO bl_type ( type_id,type_name,type_blog_count,enable,deleted ) VALUES( ?,?,?,?,? ) 
2020-11-22 10:22:28.456 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.insert.debug:159 -==> Parameters: null, going(String), null, null, null
2020-11-22 10:22:28.753 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:22:28.754 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/save(String), [com.tqk.blog.pojo.BlType@29d40cc0](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
### The error may involve com.tqk.blog.mapper.BlTypeMapper.insert-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
; Column 'type_blog_count' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
	at com.tqk.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:38)
	at com.tqk.blog.controller.TypeController.save(TypeController.java:30)
	at com.tqk.blog.controller.TypeController$$FastClassBySpringCGLIB$$81241fc9.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.TypeController$$EnhancerBySpringCGLIB$$645f98ae.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
(String), POST(String), 0(Long), {"code":20000,"msg":"更新成功！"}(String), 192.168.101.29(String)
2020-11-22 10:22:28.839 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:22:31.329 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_name = ? 
2020-11-22 10:22:31.330 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==> Parameters: going(String)
2020-11-22 10:22:31.373 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -<==      Total: 0
2020-11-22 10:22:31.418 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.insert.debug:159 -==>  Preparing: INSERT INTO bl_type ( type_id,type_name,type_blog_count,enable,deleted ) VALUES( ?,?,?,?,? ) 
2020-11-22 10:22:31.420 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.insert.debug:159 -==> Parameters: null, going(String), null, null, null
2020-11-22 10:22:31.540 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:22:31.541 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/save(String), [com.tqk.blog.pojo.BlType@70f32c79](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
### The error may involve com.tqk.blog.mapper.BlTypeMapper.insert-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
; Column 'type_blog_count' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
	at com.tqk.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:38)
	at com.tqk.blog.controller.TypeController.save(TypeController.java:30)
	at com.tqk.blog.controller.TypeController$$FastClassBySpringCGLIB$$81241fc9.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.TypeController$$EnhancerBySpringCGLIB$$645f98ae.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'type_blog_count' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java111"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:22:31.622 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:55:40.799 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 10:56:31.845 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:31.878 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), null, 192.168.101.29(String)
2020-11-22 10:56:31.966 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:56:33.435 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 10:56:33.436 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 10:56:33.518 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 10:56:33.659 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:33.661 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@7aaf0ed8](String), 1(Integer), null, POST(String), 138(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:56:33.746 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:56:33.846 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:33.848 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:56:33.933 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:56:34.414 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:56:34.415 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:56:34.460 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 2
2020-11-22 10:56:34.517 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:34.519 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:56:34.636 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:56:44.417 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_name = ? 
2020-11-22 10:56:44.419 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==> Parameters: going(String)
2020-11-22 10:56:44.458 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -<==      Total: 0
2020-11-22 10:56:44.502 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-11-22 10:56:44.503 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -==> Parameters: going(String)
2020-11-22 10:56:44.588 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -<==    Updates: 1
2020-11-22 10:56:44.633 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:44.635 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/save(String), [com.tqk.blog.pojo.BlType@6d6e0c40](String), 1(Integer), null, POST(String), 256(Long), {"code":20000,"msg":"添加成功！"}(String), 192.168.101.29(String)
2020-11-22 10:56:44.721 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 10:56:45.105 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 10:56:45.106 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 10:56:45.149 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 10:56:45.197 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 10:56:45.200 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 10:56:45.286 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:02:56.938 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:02:56.941 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:02:57.026 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:02:57.238 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:02:57.239 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:02:57.278 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 11:02:57.326 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:02:57.328 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 87(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:02:57.413 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:03:22.848 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:03:22.849 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:03:22.943 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:03:25.578 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:03:25.579 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:03:25.619 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 11:03:25.666 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:03:25.669 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 90(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:03:25.756 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:03:37.114 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 11:03:37.115 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 11:03:37.155 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 11:03:37.202 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:03:37.205 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:03:37.295 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:05:55.499 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 11:05:55.501 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 11:05:55.541 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 11:05:55.588 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:05:55.590 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 93(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:05:55.680 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:06:57.380 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:06:57.381 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:06:57.471 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:06:57.662 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:06:57.663 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:06:57.704 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 11:06:57.747 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:06:57.749 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 86(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:06:57.836 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:06:59.894 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 11:06:59.896 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 11:06:59.943 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 11:06:59.992 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:06:59.994 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 152(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:07:00.097 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:10:06.001 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:10:06.004 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:10:06.092 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:10:06.300 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:10:06.300 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:10:06.339 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 11:10:06.383 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:10:06.385 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:10:06.473 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:10:08.178 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_id = ? 
2020-11-22 11:10:08.179 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Integer)
2020-11-22 11:10:08.218 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectByPrimaryKey.debug:159 -<==      Total: 1
2020-11-22 11:10:08.263 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:10:08.265 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/get/1(String), [1](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:10:08.352 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:10:48.472 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:10:48.473 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:10:48.562 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:10:51.629 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:10:51.630 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:10:51.672 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 3
2020-11-22 11:10:51.715 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:10:51.716 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 92(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:10:51.801 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:11:10.459 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE type_name = ? 
2020-11-22 11:11:10.460 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -==> Parameters: Spring(String)
2020-11-22 11:11:10.500 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectOne.debug:159 -<==      Total: 0
2020-11-22 11:11:10.539 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-11-22 11:11:10.540 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -==> Parameters: Spring(String)
2020-11-22 11:11:10.647 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.insertBlType.debug:159 -<==    Updates: 1
2020-11-22 11:11:10.694 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:11:10.695 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/save(String), [com.tqk.blog.pojo.BlType@2278c9e4](String), 1(Integer), null, POST(String), 235(Long), {"code":20000,"msg":"添加成功！"}(String), 192.168.101.29(String)
2020-11-22 11:11:10.782 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:11:10.866 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:11:10.866 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:11:10.906 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:11:10.948 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:11:10.949 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:11:11.033 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:44:31.859 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:44:31.860 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:44:31.945 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:44:32.003 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:44:32.004 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:44:32.091 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:44:39.449 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 11:44:39.450 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 11:44:39.489 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 11:44:39.534 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:44:39.535 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@23447ef5](String), 1(Integer), null, POST(String), 84(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:44:39.630 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:44:39.707 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:44:39.708 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:44:39.792 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:44:39.963 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:44:39.963 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:44:40.006 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:44:40.046 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:44:40.047 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 86(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:44:40.131 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:45:05.291 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:45:05.293 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:45:05.385 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:45:05.584 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:45:05.586 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:45:05.626 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:45:05.667 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:45:05.668 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:45:05.768 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:45:31.017 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:45:31.018 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:45:31.103 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:45:31.285 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:45:31.286 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:45:31.324 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:45:31.366 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:45:31.368 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 83(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:45:31.468 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:46:51.296 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:46:51.297 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:46:51.381 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:46:51.578 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:46:51.579 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:46:51.620 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:46:51.662 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:46:51.663 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 86(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:46:51.747 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:47:32.824 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:47:32.825 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:47:32.934 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:47:33.133 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:47:33.134 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:47:33.173 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:47:33.223 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:47:33.224 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 83(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:47:33.319 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:47:41.641 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:47:41.642 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:47:41.682 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:47:41.727 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:47:41.728 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:47:41.819 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 11:49:40.369 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 11:49:40.370 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 11:49:40.411 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 11:49:40.455 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 11:49:40.456 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 11:49:40.543 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:42:46.110 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:42:46.111 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:42:46.203 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:42:47.412 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 14:42:47.413 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 14:42:47.454 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 14:42:47.500 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:42:47.502 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@18bc308d](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:42:47.594 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:42:47.973 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:42:47.974 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:42:48.059 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:42:48.273 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 14:42:48.274 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 14:42:48.313 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 14:42:48.354 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:42:48.355 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 82(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:42:48.446 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:43:26.305 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:43:26.306 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:43:26.402 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:52:30.795 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:52:30.796 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:52:30.885 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:52:33.627 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 14:52:33.627 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 14:52:33.669 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 14:52:33.715 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:52:33.716 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:52:33.809 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:52:35.529 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 14:52:35.530 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 14:52:35.583 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:35.585 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 14:52:35.586 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 14:52:35.633 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:35.771 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:52:35.773 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 326(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:52:35.875 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:52:41.960 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-11-22 14:52:41.962 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 14:52:42.003 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:42.005 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 14:52:42.007 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 14:52:42.046 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:42.171 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:52:42.173 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 255(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:52:42.267 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:52:42.641 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods asc limit ?, ? 
2020-11-22 14:52:42.642 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 14:52:42.682 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:42.684 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 14:52:42.685 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 14:52:42.727 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 14:52:42.867 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:52:42.868 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 263(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:52:42.960 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:53:17.243 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods asc limit ?, ? 
2020-11-22 14:53:17.245 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-11-22 14:53:17.286 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 14:53:17.288 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 14:53:17.289 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 14:53:17.328 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 14:53:17.453 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:53:17.456 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 251(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":20,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:53:17.541 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:53:18.840 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods asc limit ?, ? 
2020-11-22 14:53:18.842 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 50(Integer)
2020-11-22 14:53:18.893 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 14:53:18.895 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 14:53:18.896 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 14:53:18.949 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 14:53:19.082 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:53:19.084 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=50, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":50,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:53:19.173 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:53:46.294 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 14:53:46.295 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 14:53:46.350 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 14:53:46.412 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:53:46.414 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 104(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:53:46.508 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 14:53:55.418 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 14:53:55.420 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 14:53:55.466 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 14:53:55.517 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 14:53:55.518 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 95(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 14:53:55.604 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 15:06:35.155 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 15:06:35.156 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 15:06:35.242 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 15:06:35.533 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 15:06:35.533 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 15:06:35.573 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 15:06:35.574 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 15:06:35.574 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 15:06:35.612 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 15:06:35.734 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 15:06:35.735 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 239(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 15:06:35.821 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:49:58.867 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 20:49:58.868 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 20:49:58.908 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 20:49:58.952 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:49:58.954 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:49:59.052 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:53:45.451 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by type_name asc limit ?, ? 
2020-11-22 20:53:45.452 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:53:45.512 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:53:45.514 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:53:45.515 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:53:45.553 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:53:45.673 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:53:45.675 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=type_name, sortMethod=asc)](String), 1(Integer), null, POST(String), 260(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"type_name","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:53:45.778 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:53:45.870 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by type_name desc limit ?, ? 
2020-11-22 20:53:45.872 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:53:45.913 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:53:45.914 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:53:45.915 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:53:45.958 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:53:46.080 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:53:46.082 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=type_name, sortMethod=desc)](String), 1(Integer), null, POST(String), 254(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"type_name","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:53:46.182 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:55:32.938 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:55:32.939 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:55:33.052 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:55:34.931 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 20:55:34.933 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 20:55:34.973 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 20:55:35.019 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:55:35.020 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@712fd6eb](String), 1(Integer), null, POST(String), 90(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:55:35.106 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:55:35.480 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:55:35.481 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:55:35.566 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:55:39.000 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:55:39.001 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:55:39.041 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:55:39.043 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:55:39.044 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:55:39.083 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:55:39.205 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:55:39.207 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 242(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:55:39.295 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:56:13.507 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:56:13.508 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:56:13.592 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:56:13.914 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:56:13.915 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:56:13.962 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:56:13.964 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:56:13.965 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:56:14.005 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:56:14.128 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:56:14.130 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 248(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:56:14.216 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:07.281 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:07.282 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:07.372 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:07.465 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:07.466 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:07.551 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:07.659 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:57:07.660 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:57:07.699 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:07.701 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:57:07.702 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:57:07.742 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:08.036 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:57:08.037 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:57:08.076 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:08.078 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:57:08.078 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:57:08.116 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:08.231 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:08.231 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 379(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:08.322 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:08.363 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:08.364 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 417(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:08.456 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:12.234 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:12.235 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:12.324 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:57:12.643 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:57:12.644 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:57:12.685 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:12.686 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:57:12.687 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:57:12.729 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:57:12.856 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:57:12.857 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 254(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:57:12.947 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:59:22.741 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:59:22.742 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:59:22.832 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 20:59:23.105 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 20:59:23.106 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 20:59:23.149 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 20:59:23.150 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 20:59:23.150 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 20:59:23.192 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 20:59:23.317 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 20:59:23.317 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 255(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 20:59:23.420 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:23.008 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:23.009 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:23.100 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:23.396 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:00:23.396 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:23.440 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:23.442 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:23.443 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:23.485 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:23.619 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:23.620 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 260(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:23.711 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:40.210 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment asc limit ?, ? 
2020-11-22 21:00:40.212 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:40.255 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:40.257 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:40.258 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:40.300 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:40.427 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:40.428 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_comment, sortMethod=asc)](String), 1(Integer), null, POST(String), 261(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:40.526 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:41.190 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-11-22 21:00:41.192 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:41.236 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:41.237 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:41.238 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:41.284 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:41.415 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:41.417 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 264(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:41.517 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:42.685 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection asc limit ?, ? 
2020-11-22 21:00:42.687 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:42.729 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:42.731 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:42.732 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:42.774 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:42.903 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:42.905 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_collection, sortMethod=asc)](String), 1(Integer), null, POST(String), 259(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:43.002 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:43.046 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection desc limit ?, ? 
2020-11-22 21:00:43.047 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:43.088 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:43.089 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:43.089 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:43.130 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:43.251 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:43.253 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 243(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:43.339 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:44.761 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read asc limit ?, ? 
2020-11-22 21:00:44.763 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:44.805 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:44.807 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:44.808 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:44.847 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:44.966 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:44.967 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_read, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 247(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:45.054 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:45.079 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-11-22 21:00:45.081 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:45.124 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:45.126 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:45.127 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:45.169 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:45.296 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:45.297 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 259(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:45.400 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:46.553 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods asc limit ?, ? 
2020-11-22 21:00:46.554 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:46.596 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:46.599 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:46.599 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:46.641 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:46.772 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:46.773 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=asc)](String), 1(Integer), null, POST(String), 263(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:46.797 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-11-22 21:00:46.798 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:00:46.841 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:46.842 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:00:46.842 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:00:46.871 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:46.881 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:00:47.005 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:47.006 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 245(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:47.102 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:00:58.330 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 21:00:58.331 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 21:00:58.370 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 21:00:58.417 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:00:58.418 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 88(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:00:58.506 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:01:00.836 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:01:00.837 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:01:00.879 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:01:00.881 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:01:00.882 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:01:00.923 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:01:01.042 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:01:01.043 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 247(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:01:01.130 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:02.416 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:04:02.417 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-11-22 21:04:02.854 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:02.855 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:04:02.856 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:04:02.896 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:03.019 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:03.021 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 646(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:03.107 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:03.675 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:04:03.676 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:04:03.717 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:03.719 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:04:03.720 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:04:03.761 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:03.882 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:03.883 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 349(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:03.973 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:12.835 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 21:04:12.836 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 21:04:12.876 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 21:04:12.920 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:12.922 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), null, GET(String), 84(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:13.029 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:15.407 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 21:04:15.408 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 21:04:15.450 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 21:04:15.455 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? ,blog_source = ? where blog_id = ? and version = ? 
2020-11-22 21:04:15.456 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -==> Parameters: BeanUtils.copyProperties的用法(String), Java(String), BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。(String), 0(Integer), 0(Integer), 0(Integer), 1(Integer), BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。(String), 0(Integer), 百度(String), 1324038097171820544(String), 1(Integer)
2020-11-22 21:04:15.535 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlBlogMapper.update.debug:159 -<==    Updates: 1
2020-11-22 21:04:15.669 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:15.670 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/update(String), [com.tqk.blog.pojo.BlBlog@79cc62df](String), 1(Integer), null, PUT(String), 302(Long), {"code":20000,"msg":"更新成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:15.755 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:16.178 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:04:16.179 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:04:16.220 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:16.222 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:04:16.222 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:04:16.261 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:16.391 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:16.392 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-04 17:17:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 258(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:16.482 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:27.381 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 21:04:27.382 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 21:04:27.422 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 21:04:27.465 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:27.467 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:27.551 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:34.379 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 21:04:34.380 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 21:04:34.420 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 21:04:34.464 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:34.465 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), null, GET(String), 148(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:34.552 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:41.565 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-11-22 21:04:41.566 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -==> Parameters: 1324038097171820544(String)
2020-11-22 21:04:41.607 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getById.debug:159 -<==      Total: 1
2020-11-22 21:04:41.651 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:41.653 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/get/1324038097171820544(String), [1324038097171820544](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 87(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"BeanUtils.copyProperties(a, b);b中的存在的属性，a中一定要有，但是a中可以有多余的属性；a中与b中相同的属性都会被替换，不管是否有值；a、 b中的属性要名字相同，才能被赋值，不然的话需要手动赋值；Spring的BeanUtils的CopyProperties方法需要对应的属性有getter和setter方法；如果存在属性完全相同的内部类，但是不是同一个内部类，即分别属于各自的内部类，则spring会认为属性不同，不会copy；spring和apache的copy属性的方法源和目的参数的位置正好相反，所以导包和调用的时候都要注意一下。","blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","blogType":1,"createdTime":1604481453000,"version":2},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:41.741 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 21:04:56.601 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 21:04:56.602 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 21:04:56.642 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:56.644 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 21:04:56.645 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 21:04:56.688 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 21:04:56.806 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 21:04:56.807 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1324038097171820544, blogTitle=BeanUtils.copyProperties的用法, blogImage=Java, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Java, blogSource=百度, blogRemark=BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。, blogComment=0, blogMonth=null, createdTime=2020-11-04 17:17:33, updateTime=2020-11-22 13:04:15)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 247(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 21:04:56.893 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:02.575 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:02.576 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-04 17:17:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:02.665 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:03.838 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:18:03.840 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:18:03.880 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:18:03.925 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:03.926 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@90061c3](String), 1(Integer), null, POST(String), 94(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:04.023 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:04.097 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:04.099 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:04.188 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:04.715 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:18:04.716 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 22:18:04.773 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:04.774 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:18:04.775 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:18:04.816 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:04.981 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:04.983 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 282(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:05.425 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:08.393 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:18:08.395 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:18:08.441 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:18:08.488 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:08.489 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@304e6b1b](String), 1(Integer), null, POST(String), 183(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:08.577 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:09.232 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:18:09.233 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:18:09.271 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:18:09.315 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:09.316 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@618d3cb4](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 87(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:09.405 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:10.102 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:18:10.102 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:18:10.141 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:18:10.185 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:10.186 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@5d0bdd9](String), 1(Integer), null, POST(String), 85(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:10.274 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:10.336 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:18:10.336 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:18:10.375 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:18:10.419 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:10.420 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@68a6d7e2](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:10.508 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:15.574 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:15.575 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:15.666 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:15.907 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:18:15.909 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 22:18:15.952 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:15.954 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:18:15.954 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:18:15.994 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:16.115 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:16.116 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), POST(String), 254(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:16.202 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:27.921 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:27.922 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:71)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7c47987e.getLoginInfo(<generated>)
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:28.025 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:18:31.323 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:18:31.325 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 22:18:31.366 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:31.368 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:18:31.369 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:18:31.408 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:18:31.532 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:18:31.534 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 243(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:18:31.619 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:19:06.565 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:19:06.567 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:19:06.660 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:19:06.988 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:19:06.989 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 22:19:07.029 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:19:07.030 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:19:07.031 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:19:07.069 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:19:07.191 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:19:07.193 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:19:07.281 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:25:06.876 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 22:26:08.746 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:26:08.795 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:26:08.870 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:26:09.018 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:26:09.021 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@df41092](String), 1(Integer), null, POST(String), 246(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:26:09.113 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:26:25.281 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:26:25.282 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:26:25.326 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:26:25.375 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:26:25.376 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@214e658](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"token":"sessionId"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:26:25.473 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:27:07.334 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 22:27:24.285 DEBUG [main]com.tqk.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-11-22 22:28:10.181 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:28:10.212 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:28:10.278 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:28:10.430 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:28:10.434 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@bbbcba](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"token":"EB311DDAAA90D3B2A0288640AA801337"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:28:10.527 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:28:24.722 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 22:28:24.723 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 22:28:24.765 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 22:28:24.817 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:28:24.819 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 93(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:28:24.912 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:28:31.921 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE ( enable = ? and deleted = ? ) 
2020-11-22 22:28:31.922 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==> Parameters: 1(Integer), 0(Integer)
2020-11-22 22:28:31.969 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -<==      Total: 4
2020-11-22 22:28:32.013 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:28:32.015 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 156(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:28:32.149 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:28:50.397 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:28:50.399 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-11-22 22:28:50.442 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:28:50.445 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:28:50.446 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:28:50.487 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:28:50.638 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:28:50.640 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 296(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:28:50.731 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:29:00.969 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-11-22 22:29:00.970 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.recomRead.debug:159 -==> Parameters: 
2020-11-22 22:29:01.013 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.recomRead.debug:159 -<==      Total: 1
2020-11-22 22:29:01.063 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:29:01.066 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 98(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogRead":0,"blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-11-22 22:29:01.158 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:50:10.980 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:50:10.981 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:67)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2da400e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), null, 192.168.101.29(String)
2020-11-22 22:50:11.069 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:50:44.091 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 22:50:44.093 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 22:50:44.133 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 22:50:44.180 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:50:44.182 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@5dbe0544](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"token":"475378D8AABEDF54AF047775ED338F06"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:50:44.272 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:50:44.352 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:50:44.354 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:50:44.440 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:50:47.833 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 22:50:47.835 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 22:50:47.879 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 22:50:47.882 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 22:50:47.884 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 22:50:47.924 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 22:50:48.051 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:50:48.052 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 263(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 22:50:48.138 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 22:54:35.646 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:54:35.657 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlBlogMapper.save.debug:159 -==> Parameters: 1330525088201818112(String), 面试官不讲武德问我：为什么MySQL不建议使用delete删除数据？(String), null, <h2>前言</h2>
<p>我负责的有几个系统随着业务量的增长，存储在MySQL中的数据日益剧增，我当时就想现在的业务方不讲武德，搞偷袭，趁我没反应过来把很多表，很快，很快啊都打到了亿级别，我大意了，没有闪，这就导致跟其Join的表的SQL变得很慢，对的应用接口的response time也变长了，影响了用户体验。</p>
<p>事后我找到业务方，我批评了他们跟他们说要讲武德，连忙跟我道歉，这个事情才就此作罢，走的时候我对他们说下次不要这样了，耗子尾汁，好好反思。</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/3c93aececcb9e763f5476362c4e88710.png" alt="" /></p>
<p>骂归骂，事情还是得解决，时候我分析原因发现，发现有些表的数据量增长很快，对应SQL扫描了很多无效数据，导致SQL慢了下来，通过确认之后，这些大表都是一些流水、记录、日志类型数据，只需要保留1到3个月，此时需要对表做数据清理实现瘦身，一般都会想到用insert + delete的方式去清理。</p>
<p>这篇文章我会从InnoDB存储空间分布，delete对性能的影响，以及优化建议方面解释为什么不建议delete删除数据。</p>
<h2><a name="t1"></a><a name="t1"></a><a id="InnoDB_16"></a>InnoDB存储架构</h2>
<p><img src="https://img-blog.csdnimg.cn/img_convert/5c66ffe9749c58e1613d2519f7ea7211.png" alt="" /></p>
<p>从这张图可以看到，InnoDB存储结构主要包括两部分：逻辑存储结构和物理存储结构。</p>
<p>逻辑上是由表空间tablespace &mdash;&gt; 段segment或者inode &mdash;&gt; 区Extent &mdash;&mdash;&gt;数据页Page构成，Innodb逻辑管理单位是segment，空间分配的最小单位是extent，每个segment都会从表空间FREE_PAGE中分配32个page，当这32个page不够用时，会按照以下原则进行扩展：如果当前小于1个extent，则扩展到1个extent；当表空间小于32MB时，每次扩展一个extent；表空间大于32MB，每次扩展4个extent。</p>
<p>物理上主要由系统用户数据文件，日志文件组成，数据文件主要存储MySQL字典数据和用户数据，日志文件记录的是data page的变更记录，用于MySQL Crash时的恢复。</p>
<h2><a name="t2"></a><a name="t2"></a><a id="Innodb_26"></a>Innodb表空间</h2>
<p>InnoDB存储包括三类表空间：系统表空间，用户表空间，Undo表空间。</p>
<p><strong>系统表空间：</strong>&nbsp;主要存储MySQL内部的数据字典数据，如information_schema下的数据。</p>
<p><strong>用户表空间：</strong>&nbsp;当开启innodb_file_per_table=1时，数据表从系统表空间独立出来存储在以table_name.ibd命令的数据文件中，结构信息存储在table_name.frm文件中。</p>
<p><strong>Undo表空间：</strong>&nbsp;存储Undo信息，如快照一致读和flashback都是利用undo信息。</p>
<p>从MySQL 8.0开始允许用户自定义表空间，具体语法如下：</p>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">CREATE TABLESPACE tablespace_name
    ADD DATAFILE 'file_name'               #数据文件名
    USE LOGFILE GROUP logfile_group        #自定义日志文件组，一般每组2个logfile。
    [EXTENT_SIZE [=] extent_size]          #区大小
    [INITIAL_SIZE [=] initial_size]        #初始化大小 
    [AUTOEXTEND_SIZE [=] autoextend_size]  #自动扩宽尺寸
    [MAX_SIZE [=] max_size]                #单个文件最大size，最大是32G。
    [NODEGROUP [=] nodegroup_id]           #节点组
    [WAIT]
    [COMMENT [=] comment_text]
    ENGINE [=] engine_name
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
</ul>
<p>这样的好处是可以做到数据的冷热分离，分别用HDD和SSD来存储，既能实现数据的高效访问，又能节约成本，比如可以添加两块500G硬盘，经过创建卷组vg，划分逻辑卷lv，创建数据目录并mount相应的lv，假设划分的两个目录分别是/hot_data 和 /cold_data。</p>
<p>这样就可以将核心的业务表如用户表，订单表存储在高性能SSD盘上，一些日志，流水表存储在普通的HDD上，主要的操作步骤如下：</p>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#创建热数据表空间
create tablespace tbs_data_hot add datafile '/hot_data/tbs_data_hot01.dbf' max_size 20G;
#创建核心业务表存储在热数据表空间
create table booking(id bigint not null primary key auto_increment, &hellip;&hellip; ) tablespace tbs_data_hot;
#创建冷数据表空间
create tablespace tbs_data_cold add datafile '/hot_data/tbs_data_cold01.dbf' max_size 20G;
#创建日志，流水，备份类的表存储在冷数据表空间
create table payment_log(id bigint not null primary key auto_increment, &hellip;&hellip; ) tablespace tbs_data_cold;
#可以移动表到另一个表空间
alter table payment_log tablespace tbs_data_hot;
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
</ul>
<h2><a name="t3"></a><a name="t3"></a><a id="Inndob_69"></a>Inndob存储分布</h2>
<h3><a name="t4"></a><a name="t4"></a><a id="_71"></a>创建空表查看空间变化</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; create table user(id bigint not null primary key auto_increment, 
    -&gt; name varchar(20) not null default '' comment '姓名', 
    -&gt; age tinyint not null default 0 comment 'age', 
    -&gt; gender char(1) not null default 'M'  comment '性别',
    -&gt; phone varchar(16) not null default '' comment '手机号',
    -&gt; create_time datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    -&gt; update_time datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间'
    -&gt; ) engine = InnoDB DEFAULT CHARSET=utf8mb4 COMMENT '用户信息表';
Query OK, 0 rows affected (0.26 sec)
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
</ul>
<pre class="prettyprint"><code class="prism language-bash has-numbering"><span class="token comment"># ls -lh user1.ibd </span>
-rw-r----- 1 mysql mysql 96K Nov  6 12:48 user.ibd
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
</ul>
<p>设置参数innodb_file_per_table=1时，创建表时会自动创建一个segment，同时分配一个extent，包含32个data page的来存储数据，这样创建的空表默认大小就是96KB，extent使用完之后会申请64个连接页，这样对于一些小表，或者undo segment，可以在开始时申请较少的空间，节省磁盘容量的开销。</p>
<pre class="prettyprint"><code class="prism language-shell has-numbering"><span class="token comment"># python2 py_innodb_page_info.py -v /data2/mysql/test/user.ibd</span>
page offset 00000000, page <span class="token function">type</span> <span class="token operator">&lt;</span>File Space Header<span class="token operator">&gt;</span>
page offset 00000001, page <span class="token function">type</span> <span class="token operator">&lt;</span>Insert Buffer Bitmap<span class="token operator">&gt;</span>
page offset 00000002, page <span class="token function">type</span> <span class="token operator">&lt;</span>File Segment inode<span class="token operator">&gt;</span>
page offset 00000003, page <span class="token function">type</span> <span class="token operator">&lt;</span>B-tree Node<span class="token operator">&gt;</span>, page level <span class="token operator">&lt;</span>0000<span class="token operator">&gt;</span>
page offset 00000000, page <span class="token function">type</span> <span class="token operator">&lt;</span>Freshly Allocated Page<span class="token operator">&gt;</span>
page offset 00000000, page <span class="token function">type</span> <span class="token operator">&lt;</span>Freshly Allocated Page<span class="token operator">&gt;</span>
Total number of page: 6:      <span class="token comment">#总共分配的页数</span>
Freshly Allocated Page: 2     <span class="token comment">#可用的数据页</span>
Insert Buffer Bitmap: 1       <span class="token comment">#插入缓冲页</span>
File Space Header: 1          <span class="token comment">#文件空间头</span>
B-tree Node: 1                <span class="token comment">#数据页</span>
File Segment inode: 1         <span class="token comment">#文件端inonde，如果是在ibdata1.ibd上会有多个inode。</span>
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
</ul>
<h3><a name="t5"></a><a name="t5"></a><a id="_108"></a>插入数据后的空间变化</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; DELIMITER $$
mysql&gt; CREATE PROCEDURE insert_user_data(num INTEGER) 
    -&gt; BEGIN
    -&gt;     DECLARE v_i int unsigned DEFAULT 0;
    -&gt; set autocommit= 0;
    -&gt; WHILE v_i &lt; num DO
    -&gt;    insert into user(`name`, age, gender, phone) values (CONCAT('lyn',v_i), mod(v_i,120), 'M', CONCAT('152',ROUND(RAND(1)*100000000)));
    -&gt;  SET v_i = v_i+1;
    -&gt; END WHILE;
    -&gt; commit;
    -&gt; END $$
Query OK, 0 rows affected (0.01 sec)
mysql&gt; DELIMITER ;

#插入10w数据
mysql&gt; call insert_user_data(100000);
Query OK, 0 rows affected (6.69 sec)
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
</ul>
<pre class="prettyprint"><code class="prism language-shell has-numbering"><span class="token comment"># ls -lh user.ibd</span>
-rw-r----- 1 mysql mysql 14M Nov 6 10:58 /data2/mysql/test/user.ibd

<span class="token comment"># python2 py_innodb_page_info.py -v /data2/mysql/test/user.ibd</span>
page offset 00000000, page <span class="token function">type</span> <span class="token operator">&lt;</span>File Space Header<span class="token operator">&gt;</span>
page offset 00000001, page <span class="token function">type</span> <span class="token operator">&lt;</span>Insert Buffer Bitmap<span class="token operator">&gt;</span>
page offset 00000002, page <span class="token function">type</span> <span class="token operator">&lt;</span>File Segment inode<span class="token operator">&gt;</span>
page offset 00000003, page <span class="token function">type</span> <span class="token operator">&lt;</span>B-tree Node<span class="token operator">&gt;</span>, page level <span class="token operator">&lt;</span>0001<span class="token operator">&gt;</span>   <span class="token comment">#增加了一个非叶子节点，树的高度从1变为2.</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
page offset 00000000, page <span class="token function">type</span> <span class="token operator">&lt;</span>Freshly Allocated Page<span class="token operator">&gt;</span>
Total number of page: 896:
Freshly Allocated Page: 493
Insert Buffer Bitmap: 1
File Space Header: 1
B-tree Node: 400
File Segment inode: 1
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
</ul>
<h3><a name="t6"></a><a name="t6"></a><a id="delete_149"></a>delete数据后的空间变化</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; select min(id),max(id),count(*) from user;
+---------+---------+----------+
| min(id) | max(id) | count(*) |
+---------+---------+----------+
|       1 |  100000 |   100000 |
+---------+---------+----------+
1 row in set (0.05 sec)
#删除50000条数据，理论上空间应该从14MB变长7MB左右。
mysql&gt; delete from user limit 50000;
Query OK, 50000 rows affected (0.25 sec)

#数据文件大小依然是14MB，没有缩小。
# ls -lh /data2/mysql/test/user1.ibd 
-rw-r----- 1 mysql mysql 14M Nov  6 13:22 /data2/mysql/test/user.ibd

#数据页没有被回收。
# python2 py_innodb_page_info.py -v /data2/mysql/test/user.ibd
page offset 00000000, page type &lt;File Space Header&gt;
page offset 00000001, page type &lt;Insert Buffer Bitmap&gt;
page offset 00000002, page type &lt;File Segment inode&gt;
page offset 00000003, page type &lt;B-tree Node&gt;, page level &lt;0001&gt;
........................................................
page offset 00000000, page type &lt;Freshly Allocated Page&gt;
Total number of page: 896:
Freshly Allocated Page: 493
Insert Buffer Bitmap: 1
File Space Header: 1
B-tree Node: 400
File Segment inode: 1
#在MySQL内部是标记删除，
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
<li>19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>
<li>25</li>
<li>26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
</ul>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; use information_schema;

Database changed
mysql&gt; SELECT A.SPACE AS TBL_SPACEID, A.TABLE_ID, A.NAME AS TABLE_NAME, FILE_FORMAT, ROW_FORMAT, SPACE_TYPE,  B.INDEX_ID , B.NAME AS INDEX_NAME, PAGE_NO, B.TYPE AS INDEX_TYPE FROM INNODB_SYS_TABLES A LEFT JOIN INNODB_SYS_INDEXES B ON A.TABLE_ID =B.TABLE_ID WHERE A.NAME = 'test/user1';
+-------------+----------+------------+-------------+------------+------------+----------+------------+---------+------------+
| TBL_SPACEID | TABLE_ID | TABLE_NAME | FILE_FORMAT | ROW_FORMAT | SPACE_TYPE | INDEX_ID | INDEX_NAME | PAGE_NO | INDEX_TYPE |
+-------------+----------+------------+-------------+------------+------------+----------+------------+---------+------------+
|        1283 |     1207 | test/user | Barracuda   | Dynamic    | Single     |     2236 | PRIMARY    |       3 |          3 |
+-------------+----------+------------+-------------+------------+------------+----------+------------+---------+------------+
1 row in set (0.01 sec)

PAGE_NO = 3 标识B-tree的root page是3号页，INDEX_TYPE = 3是聚集索引。 INDEX_TYPE取值如下：
0 = nonunique secondary index; 
1 = automatically generated clustered index (GEN_CLUST_INDEX); 
2 = unique nonclustered index; 
3 = clustered index; 
32 = full-text index;
#收缩空间再后进行观察
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
</ul>
<p>MySQL内部不会真正删除空间，而且做标记删除，即将delflag:N修改为delflag:Y，commit之后会会被purge进入删除链表，如果下一次insert更大的记录，delete之后的空间不会被重用，如果插入的记录小于等于delete的记录空会被重用，这块内容可以通过知数堂的innblock工具进行分析。</p>
<h2><a name="t7"></a><a name="t7"></a><a id="Innodb_207"></a>Innodb中的碎片</h2>
<h3><a name="t8"></a><a name="t8"></a><a id="_209"></a>碎片的产生</h3>
<p>我们知道数据存储在文件系统上的，总是不能100%利用分配给它的物理空间，删除数据会在页面上留下一些&rdquo;空洞&rdquo;，或者随机写入（聚集索引非线性增加）会导致页分裂，页分裂导致页面的利用空间少于50%，另外对表进行增删改会引起对应的二级索引值的随机的增删改，也会导致索引结构中的数据页面上留下一些"空洞"，虽然这些空洞有可能会被重复利用，但终究会导致部分物理空间未被使用，也就是碎片。</p>
<p>同时，即便是设置了填充因子为100%，Innodb也会主动留下page页面1/16的空间作为预留使用（An innodb_fill_factor setting of 100 leaves 1/16 of the space in clustered index pages free for future index growth）防止update带来的行溢出。</p>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; select table_schema,
    -&gt;        table_name,ENGINE,
    -&gt;        round(DATA_LENGTH/1024/1024+ INDEX_LENGTH/1024/1024) total_mb,TABLE_ROWS,
    -&gt;        round(DATA_LENGTH/1024/1024) data_mb, round(INDEX_LENGTH/1024/1024) index_mb, round(DATA_FREE/1024/1024) free_mb, round(DATA_FREE/DATA_LENGTH*100,2) free_ratio
    -&gt; from information_schema.TABLES where  TABLE_SCHEMA= 'test'
    -&gt; and TABLE_NAME= 'user';
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
| table_schema | table_name | ENGINE | total_mb | TABLE_ROWS | data_mb | index_mb | free_mb | free_ratio |
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
| test         | user      | InnoDB |        4 |      50000 |       4 |        0 |       6 |     149.42 |
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
1 row in set (0.00 sec)

</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
</ul>
<p>其中data_free是分配了未使用的字节数，并不能说明完全是碎片空间。</p>
<h3><a name="t9"></a><a name="t9"></a><a id="_233"></a>碎片的回收</h3>
<p>对于InnoDB的表，可以通过以下命令来回收碎片，释放空间，这个是随机读IO操作，会比较耗时，也会阻塞表上正常的DML运行，同时需要占用额外更多的磁盘空间，对于RDS来说，可能会导致磁盘空间瞬间爆满，实例瞬间被锁定，应用无法做DML操作，所以禁止在线上环境去执行。</p>
<pre class="prettyprint"><code class="prism language-shell has-numbering"><span class="token comment">#执行InnoDB的碎片回收</span>
mysql<span class="token operator">&gt;</span> alter table user engine<span class="token operator">=</span>InnoDB<span class="token punctuation">;</span>
Query OK, 0 rows affected <span class="token punctuation">(</span>9.00 sec<span class="token punctuation">)</span>
Records: 0  Duplicates: 0  Warnings: 0

<span class="token comment">##执行完之后，数据文件大小从14MB降低到10M。</span>
<span class="token comment"># ls -lh /data2/mysql/test/user1.ibd </span>
-rw-r----- 1 mysql mysql 10M Nov 6 16:18 /data2/mysql/test/user.ibd
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
</ul>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">mysql&gt; select table_schema,        table_name,ENGINE,        round(DATA_LENGTH/1024/1024+ INDEX_LENGTH/1024/1024) total_mb,TABLE_ROWS,        round(DATA_LENGTH/1024/1024) data_mb, round(INDEX_LENGTH/1024/1024) index_mb, round(DATA_FREE/1024/1024) free_mb, round(DATA_FREE/DATA_LENGTH*100,2) free_ratio from information_schema.TABLES where  TABLE_SCHEMA= 'test' and TABLE_NAME= 'user';
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
| table_schema | table_name | ENGINE | total_mb | TABLE_ROWS | data_mb | index_mb | free_mb | free_ratio |
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
| test         | user      | InnoDB |        5 |      50000 |       5 |        0 |       2 |      44.29 |
+--------------+------------+--------+----------+------------+---------+----------+---------+------------+
1 row in set (0.00 sec)


</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
</ul>
<h2><a name="t10"></a><a name="t10"></a><a id="deleteSQL_260"></a>delete对SQL的影响</h2>
<h3><a name="t11"></a><a name="t11"></a><a id="SQL_262"></a>未删除前的SQL执行情况</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#插入100W数据
mysql&gt; call insert_user_data(1000000);
Query OK, 0 rows affected (35.99 sec)

#添加相关索引
mysql&gt; alter table user add index idx_name(name), add index idx_phone(phone);
Query OK, 0 rows affected (6.00 sec)
Records: 0  Duplicates: 0  Warnings: 0

#表上索引统计信息
mysql&gt; show index from user;
+-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table | Non_unique | Key_name  | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| user  |          0 | PRIMARY   |            1 | id          | A         |      996757 |     NULL | NULL   |      | BTREE      |         |               |
| user  |          1 | idx_name  |            1 | name        | A         |      996757 |     NULL | NULL   |      | BTREE      |         |               |
| user  |          1 | idx_phone |            1 | phone       | A         |           2 |     NULL | NULL   |      | BTREE      |         |               |
+-------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
3 rows in set (0.00 sec)

#重置状态变量计数
mysql&gt; flush status;
Query OK, 0 rows affected (0.00 sec)

#执行SQL语句
mysql&gt; select id, age ,phone from user where name like 'lyn12%';
+--------+-----+-------------+
| id     | age | phone       |
+--------+-----+-------------+
|    124 |   3 | 15240540354 |
|   1231 |  30 | 15240540354 |
|  12301 |  60 | 15240540354 |
.............................
| 129998 |  37 | 15240540354 |
| 129999 |  38 | 15240540354 |
| 130000 |  39 | 15240540354 |
+--------+-----+-------------+
11111 rows in set (0.03 sec)

mysql&gt; explain select id, age ,phone from user where name like 'lyn12%';
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
| id | select_type | table | type  | possible_keys | key      | key_len | ref  | rows  | Extra                 |
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
|  1 | SIMPLE      | user  | range | idx_name      | idx_name | 82      | NULL | 22226 | Using index condition |
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
1 row in set (0.00 sec)

#查看相关状态呢变量
mysql&gt; select * from information_schema.session_status where variable_name in('Last_query_cost','Handler_read_next','Innodb_pages_read','Innodb_data_reads','Innodb_pages_read');
+-------------------+----------------+
| VARIABLE_NAME     | VARIABLE_VALUE |
+-------------------+----------------+
| HANDLER_READ_NEXT | 11111          |    #请求读的行数
| INNODB_DATA_READS | 7868409        |    #数据物理读的总数
| INNODB_PAGES_READ | 7855239        |    #逻辑读的总数
| LAST_QUERY_COST   | 10.499000      |    #SQL语句的成本COST，主要包括IO_COST和CPU_COST。
+-------------------+----------------+
4 rows in set (0.00 sec)
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
<li>19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>
<li>25</li>
<li>26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
<li>31</li>
<li>32</li>
<li>33</li>
<li>34</li>
<li>35</li>
<li>36</li>
<li>37</li>
<li>38</li>
<li>39</li>
<li>40</li>
<li>41</li>
<li>42</li>
<li>43</li>
<li>44</li>
<li>45</li>
<li>46</li>
<li>47</li>
<li>48</li>
<li>49</li>
<li>50</li>
<li>51</li>
<li>52</li>
<li>53</li>
<li>54</li>
<li>55</li>
<li>56</li>
<li>57</li>
<li>58</li>
</ul>
<h3><a name="t12"></a><a name="t12"></a><a id="SQL_325"></a>删除后的SQL执行情况</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#删除50w数据
mysql&gt; delete from user limit 500000;
Query OK, 500000 rows affected (3.70 sec)

#分析表统计信息
mysql&gt; analyze table user;
+-----------+---------+----------+----------+
| Table     | Op      | Msg_type | Msg_text |
+-----------+---------+----------+----------+
| test.user | analyze | status   | OK       |
+-----------+---------+----------+----------+
1 row in set (0.01 sec)

#重置状态变量计数
mysql&gt; flush status;
Query OK, 0 rows affected (0.01 sec)

mysql&gt; select id, age ,phone from user where name like 'lyn12%';
Empty set (0.05 sec)

mysql&gt; explain select id, age ,phone from user where name like 'lyn12%';
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
| id | select_type | table | type  | possible_keys | key      | key_len | ref  | rows  | Extra                 |
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
|  1 | SIMPLE      | user  | range | idx_name      | idx_name | 82      | NULL | 22226 | Using index condition |
+----+-------------+-------+-------+---------------+----------+---------+------+-------+-----------------------+
1 row in set (0.00 sec)

mysql&gt; select * from information_schema.session_status where variable_name in('Last_query_cost','Handler_read_next','Innodb_pages_read','Innodb_data_reads','Innodb_pages_read');
+-------------------+----------------+
| VARIABLE_NAME     | VARIABLE_VALUE |
+-------------------+----------------+
| HANDLER_READ_NEXT | 0              |
| INNODB_DATA_READS | 7868409        |
| INNODB_PAGES_READ | 7855239        |
| LAST_QUERY_COST   | 10.499000      |
+-------------------+----------------+
4 rows in set (0.00 sec)
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
<li>19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>
<li>25</li>
<li>26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
<li>31</li>
<li>32</li>
<li>33</li>
<li>34</li>
<li>35</li>
<li>36</li>
<li>37</li>
<li>38</li>
</ul>
<h3><a name="t13"></a><a name="t13"></a><a id="_368"></a>结果统计分析</h3>
<div class="table-box">
<table>
<thead>
<tr>
<th>操作</th>
<th>COST</th>
<th>物理读次数</th>
<th>逻辑读次数</th>
<th>扫描行数</th>
<th>返回行数</th>
<th>执行时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>初始化插入100W</td>
<td>10.499000</td>
<td>7868409</td>
<td>7855239</td>
<td>22226</td>
<td>11111</td>
<td>30ms</td>
</tr>
<tr>
<td>100W随机删除50W</td>
<td>10.499000</td>
<td>7868409</td>
<td>7855239</td>
<td>22226</td>
<td>0</td>
<td>50ms</td>
</tr>
</tbody>
</table>
</div>
<p>这也说明对普通的大表，想要通过delete数据来对表进行瘦身是不现实的，所以在任何时候不要用delete去删除数据，应该使用优雅的标记删除。</p>
<h2><a name="t14"></a><a name="t14"></a><a id="delete_377"></a>delete优化建议</h2>
<h3><a name="t15"></a><a name="t15"></a><a id="_379"></a>控制业务账号权限</h3>
<p>对于一个大的系统来说，需要根据业务特点去拆分子系统，每个子系统可以看做是一个service，例如美团APP，上面有很多服务，核心的服务有用户服务user-service，搜索服务search-service，商品product-service，位置服务location-service，价格服务price-service等。每个服务对应一个数据库，为该数据库创建单独账号，同时只授予DML权限且没有delete权限，同时禁止跨库访问。</p>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#创建用户数据库并授权
create database mt_user charset utf8mb4;
grant USAGE, SELECT, INSERT, UPDATE ON mt_user.*  to 'w_user'@'%' identified by 't$W*g@gaHTGi123456';
flush privileges;
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
</ul>
<h3><a name="t16"></a><a name="t16"></a><a id="delete_390"></a>delete改为标记删除</h3>
<p>在MySQL数据库建模规范中有4个公共字段，基本上每个表必须有的，同时在create_time列要创建索引，有两方面的好处：</p>
<ol>
<li>一些查询业务场景都会有一个默认的时间段，比如7天或者一个月，都是通过create_time去过滤，走索引扫描更快。</li>
<li>一些核心的业务表需要以T +1的方式抽取数据仓库中，比如每天晚上00:30抽取前一天的数据，都是通过create_time过滤的。</li>
</ol>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">`id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键id',
`is_deleted` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否逻辑删除：0：未删除，1：已删除',
`create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
`update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间'

#有了删除标记，业务接口的delete操作就可以转换为update
update user set is_deleted = 1 where user_id = 1213;

#查询的时候需要带上is_deleted过滤
select id, age ,phone from user where is_deleted = 0 and name like 'lyn12%';
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
</ul>
<h2><a name="t17"></a><a name="t17"></a><a id="_410"></a>数据归档方式</h2>
<h3><a name="t18"></a><a name="t18"></a><a id="_412"></a>通用数据归档方法</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#1. 创建归档表，一般在原表名后面添加_bak。
CREATE TABLE `ota_order_bak` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `order_id` varchar(255) DEFAULT NULL COMMENT '订单id',
  `ota_id` varchar(255) DEFAULT NULL COMMENT 'ota',
  `check_in_date` varchar(255) DEFAULT NULL COMMENT '入住日期',
  `check_out_date` varchar(255) DEFAULT NULL COMMENT '离店日期',
  `hotel_id` varchar(255) DEFAULT NULL COMMENT '酒店ID',
  `guest_name` varchar(255) DEFAULT NULL COMMENT '顾客',
  `purcharse_time` timestamp NULL DEFAULT NULL COMMENT '购买时间',
  `create_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `create_user` varchar(255) DEFAULT NULL,
  `update_user` varchar(255) DEFAULT NULL,
  `status` int(4) DEFAULT '1' COMMENT '状态 ： 1 正常 ， 0 删除',
  `hotel_name` varchar(255) DEFAULT NULL,
  `price` decimal(10,0) DEFAULT NULL,
  `remark` longtext,
  PRIMARY KEY (`id`),
  KEY `IDX_order_id` (`order_id`) USING BTREE,
  KEY `hotel_name` (`hotel_name`) USING BTREE,
  KEY `ota_id` (`ota_id`) USING BTREE,
  KEY `IDX_purcharse_time` (`purcharse_time`) USING BTREE,
  KEY `IDX_create_time` (`create_time`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8
PARTITION BY RANGE (to_days(create_time)) ( 
PARTITION p201808 VALUES LESS THAN (to_days('2018-09-01')), 
PARTITION p201809 VALUES LESS THAN (to_days('2018-10-01')), 
PARTITION p201810 VALUES LESS THAN (to_days('2018-11-01')), 
PARTITION p201811 VALUES LESS THAN (to_days('2018-12-01')), 
PARTITION p201812 VALUES LESS THAN (to_days('2019-01-01')), 
PARTITION p201901 VALUES LESS THAN (to_days('2019-02-01')), 
PARTITION p201902 VALUES LESS THAN (to_days('2019-03-01')), 
PARTITION p201903 VALUES LESS THAN (to_days('2019-04-01')), 
PARTITION p201904 VALUES LESS THAN (to_days('2019-05-01')), 
PARTITION p201905 VALUES LESS THAN (to_days('2019-06-01')), 
PARTITION p201906 VALUES LESS THAN (to_days('2019-07-01')), 
PARTITION p201907 VALUES LESS THAN (to_days('2019-08-01')), 
PARTITION p201908 VALUES LESS THAN (to_days('2019-09-01')), 
PARTITION p201909 VALUES LESS THAN (to_days('2019-10-01')), 
PARTITION p201910 VALUES LESS THAN (to_days('2019-11-01')), 
PARTITION p201911 VALUES LESS THAN (to_days('2019-12-01')), 
PARTITION p201912 VALUES LESS THAN (to_days('2020-01-01')));

#2. 插入原表中无效的数据（需要跟开发同学确认数据保留范围）
create table tbl_p201808 as select * from ota_order where create_time between '2018-08-01 00:00:00' and '2018-08-31 23:59:59';

#3. 跟归档表分区做分区交换
alter table ota_order_bak exchange partition p201808 with table tbl_p201808; 

#4. 删除原表中已经规范的数据
delete from ota_order where create_time between '2018-08-01 00:00:00' and '2018-08-31 23:59:59' limit 3000;
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
<li>19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>
<li>25</li>
<li>26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
<li>31</li>
<li>32</li>
<li>33</li>
<li>34</li>
<li>35</li>
<li>36</li>
<li>37</li>
<li>38</li>
<li>39</li>
<li>40</li>
<li>41</li>
<li>42</li>
<li>43</li>
<li>44</li>
<li>45</li>
<li>46</li>
<li>47</li>
<li>48</li>
<li>49</li>
<li>50</li>
<li>51</li>
<li>52</li>
</ul>
<h3><a name="t19"></a><a name="t19"></a><a id="_469"></a>优化后的归档方式</h3>
<pre class="prettyprint"><code class="prism language-mysql has-numbering">#1. 创建中间表
CREATE TABLE `ota_order_2020` (........) ENGINE=InnoDB DEFAULT CHARSET=utf8
PARTITION BY RANGE (to_days(create_time)) ( 
PARTITION p201808 VALUES LESS THAN (to_days('2018-09-01')), 
PARTITION p201809 VALUES LESS THAN (to_days('2018-10-01')), 
PARTITION p201810 VALUES LESS THAN (to_days('2018-11-01')), 
PARTITION p201811 VALUES LESS THAN (to_days('2018-12-01')), 
PARTITION p201812 VALUES LESS THAN (to_days('2019-01-01')), 
PARTITION p201901 VALUES LESS THAN (to_days('2019-02-01')), 
PARTITION p201902 VALUES LESS THAN (to_days('2019-03-01')), 
PARTITION p201903 VALUES LESS THAN (to_days('2019-04-01')), 
PARTITION p201904 VALUES LESS THAN (to_days('2019-05-01')), 
PARTITION p201905 VALUES LESS THAN (to_days('2019-06-01')), 
PARTITION p201906 VALUES LESS THAN (to_days('2019-07-01')), 
PARTITION p201907 VALUES LESS THAN (to_days('2019-08-01')), 
PARTITION p201908 VALUES LESS THAN (to_days('2019-09-01')), 
PARTITION p201909 VALUES LESS THAN (to_days('2019-10-01')), 
PARTITION p201910 VALUES LESS THAN (to_days('2019-11-01')), 
PARTITION p201911 VALUES LESS THAN (to_days('2019-12-01')), 
PARTITION p201912 VALUES LESS THAN (to_days('2020-01-01')));

#2. 插入原表中有效的数据，如果数据量在100W左右可以在业务低峰期直接插入，如果比较大，建议采用dataX来做，可以控制频率和大小，之前我这边用Go封装了dataX可以实现自动生成json文件，自定义大小去执行。
insert into ota_order_2020 select * from ota_order where create_time between '2020-08-01 00:00:00' and '2020-08-31 23:59:59';

#3. 表重命名
alter table ota_order rename to ota_order_bak;  
alter table ota_order_2020 rename to ota_order;
#4. 插入差异数据
insert into ota_order select * from ota_order_bak a where not exists (select 1 from ota_order b where a.id = b.id);
#5. ota_order_bak改造成分区表，如果表比较大不建议直接改造，可以先创建好分区表，通过dataX把导入进去即可。

#6. 后续的归档方法
#创建中间普遍表
create table ota_order_mid like ota_order;
#交换原表无效数据分区到普通表
alter table ota_order exchange partition p201808 with table ota_order_mid; 
##交换普通表数据到归档表的相应分区
alter table ota_order_bak exchange partition p201808 with table ota_order_mid; 
</code></pre>
<ul class="pre-numbering">
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>10</li>
<li>11</li>
<li>12</li>
<li>13</li>
<li>14</li>
<li>15</li>
<li>16</li>
<li>17</li>
<li>18</li>
<li>19</li>
<li>20</li>
<li>21</li>
<li>22</li>
<li>23</li>
<li>24</li>
<li>25</li>
<li>26</li>
<li>27</li>
<li>28</li>
<li>29</li>
<li>30</li>
<li>31</li>
<li>32</li>
<li>33</li>
<li>34</li>
<li>35</li>
<li>36</li>
<li>37</li>
<li>38</li>
</ul>
<p>这样原表和归档表都是按月的分区表，只需要创建一个中间普通表，在业务低峰期做两次分区交换，既可以删除无效数据，又能回收空，而且没有空间碎片，不会影响表上的索引及SQL的执行计划。</p>
<h2><a name="t20"></a><a name="t20"></a><a id="_514"></a>总结</h2>
<p>通过从InnoDB存储空间分布，delete对性能的影响可以看到，delete物理删除既不能释放磁盘空间，而且会产生大量的碎片，导致索引频繁分裂，影响SQL执行计划的稳定性；</p>
<p>同时在碎片回收时，会耗用大量的CPU，磁盘空间，影响表上正常的DML操作。</p>
<p>在业务代码层面，应该做逻辑标记删除，避免物理删除；为了实现数据归档需求，可以用采用MySQL分区表特性来实现，都是DDL操作，没有碎片产生。</p>
<p>另外一个比较好的方案采用Clickhouse，对有生命周期的数据表可以使用Clickhouse存储，利用其TTL特性实现无效数据自动清理。</p>
<p>&nbsp;</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/6b1a379a24c910c8fa0447981b92ba25.png" alt="" /></p>
<p>链接:<a href="https://pan.baidu.com/s/1ZQEKJBgtYle3v-1LimcSwg">https://pan.baidu.com/s/1ZQEKJBgtYle3v-1LimcSwg</a>&nbsp;密码:<code>wjk6</code></p>(String), null, null, null
2020-11-22 22:54:36.039 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 22:54:36.041 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/save(String), [com.tqk.blog.pojo.BlBlog@6c57ed2](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.tqk.blog.mapper.BlBlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.tqk.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.tqk.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$c89e2edd.invoke(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6e653701.save(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$c89e2edd.invoke(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$68c397d.save(<generated>)
	at com.tqk.blog.controller.BlogController.save(BlogController.java:39)
	at com.tqk.blog.controller.BlogController$$FastClassBySpringCGLIB$$a4fc5e31.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.BlogController$$EnhancerBySpringCGLIB$$18f45a39.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
(String), POST(String), 0(Long), null, 192.168.101.29(String)
2020-11-22 22:54:36.142 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:37.562 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:37.563 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 0(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:67)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2da400e.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:37.651 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:38.840 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-11-22 23:37:38.842 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-11-22 23:37:38.883 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlAdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-11-22 23:37:38.932 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:38.934 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/login(String), [com.tqk.blog.pojo.BlAdmin@d1f8fa2](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":{"token":"23C919B00CF4C64D7009C60A2C5FA848"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:39.021 DEBUG [http-nio-8899-exec-6]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:39.432 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:39.434 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:39.520 DEBUG [http-nio-8899-exec-7]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:39.801 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 23:37:39.802 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 23:37:39.845 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 23:37:39.847 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 23:37:39.847 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 23:37:39.891 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 23:37:40.018 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:40.021 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 251(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:40.108 DEBUG [http-nio-8899-exec-8]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:46.946 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type 
2020-11-22 23:37:46.948 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -==> Parameters: 
2020-11-22 23:37:46.990 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlTypeMapper.selectAll.debug:159 -<==      Total: 4
2020-11-22 23:37:47.037 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:47.039 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:47.131 DEBUG [http-nio-8899-exec-9]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:37:49.160 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 23:37:49.162 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 23:37:49.205 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 23:37:49.207 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 23:37:49.208 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 23:37:49.249 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 23:37:49.373 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:37:49.378 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:67)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2da400e.getLoginInfo(<generated>)
(String), POST(String), 256(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:37:49.466 DEBUG [http-nio-8899-exec-10]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:59:16.989 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE ( enable = ? and deleted = ? ) 
2020-11-22 23:59:16.990 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==> Parameters: 1(Integer), 0(Integer)
2020-11-22 23:59:17.034 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -<==      Total: 4
2020-11-22 23:59:17.078 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:59:17.080 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:59:17.168 DEBUG [http-nio-8899-exec-1]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:59:17.174 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 23:59:17.175 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 23:59:17.214 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 23:59:17.216 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 23:59:17.217 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 23:59:17.253 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 23:59:17.371 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:59:17.373 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:59:17.455 DEBUG [http-nio-8899-exec-2]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:59:20.406 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:59:20.408 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /BlAdmin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"田起凯","password":"","signature":"hold on","username":"admin"},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:59:20.490 DEBUG [http-nio-8899-exec-3]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:59:20.777 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==>  Preparing: SELECT type_id,type_name,type_blog_count,enable,deleted FROM bl_type WHERE ( enable = ? and deleted = ? ) 
2020-11-22 23:59:20.778 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -==> Parameters: 1(Integer), 0(Integer)
2020-11-22 23:59:20.816 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlTypeMapper.selectByExample.debug:159 -<==      Total: 4
2020-11-22 23:59:20.860 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:59:20.861 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.tqk.blog.mapper.BlBlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.tqk.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.tqk.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$c89e2edd.invoke(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6e653701.save(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$c89e2edd.invoke(<generated>)
	at com.tqk.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$68c397d.save(<generated>)
	at com.tqk.blog.controller.BlogController.save(BlogController.java:39)
	at com.tqk.blog.controller.BlogController$$FastClassBySpringCGLIB$$a4fc5e31.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.BlogController$$EnhancerBySpringCGLIB$$18f45a39.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
(String), GET(String), 84(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":102,"typeId":1,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"Python"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"going"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Spring"}],"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:59:20.943 DEBUG [http-nio-8899-exec-4]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
2020-11-22 23:59:21.110 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-11-22 23:59:21.112 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-11-22 23:59:21.151 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getByPage.debug:159 -<==      Total: 1
2020-11-22 23:59:21.153 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-11-22 23:59:21.153 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-11-22 23:59:21.190 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlBlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-11-22 23:59:21.311 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-11-22 23:59:21.313 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), 	at com.tqk.blog.controller.AdminController.getLoginInfo(AdminController.java:67)
	at com.tqk.blog.controller.AdminController$$FastClassBySpringCGLIB$$5e004558.invoke(<generated>)
	at com.tqk.blog.aspect.RequestAspect.doAround(RequestAspect.java:65)
	at com.tqk.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2da400e.getLoginInfo(<generated>)
(String), POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1324038097171820544","blogImage":"Java","blogRead":0,"blogRemark":"BeanUtils它提供了对java反射和自省API的包装。它里面还有很多工具类，这里我们介绍一下copyProperties。","blogSource":"百度","blogTitle":"BeanUtils.copyProperties的用法","createdTime":"2020-11-04 17:17:33","typeName":"Java","updateTime":"2020-11-22 13:04:15"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 192.168.101.29(String)
2020-11-22 23:59:21.393 DEBUG [http-nio-8899-exec-5]com.tqk.blog.mapper.BlLogMapper.save.debug:159 -<==    Updates: 1
